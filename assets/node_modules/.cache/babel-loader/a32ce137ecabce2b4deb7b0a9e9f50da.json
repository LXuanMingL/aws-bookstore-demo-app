{"ast":null,"code":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\nimport { GraphQLError } from '../error/GraphQLError';\n/**\n * Extracts the root type of the operation from the schema.\n */\n\nexport function getOperationRootType(schema, operation) {\n  switch (operation.operation) {\n    case 'query':\n      var queryType = schema.getQueryType();\n\n      if (!queryType) {\n        throw new GraphQLError('Schema does not define the required query root type.', [operation]);\n      }\n\n      return queryType;\n\n    case 'mutation':\n      var mutationType = schema.getMutationType();\n\n      if (!mutationType) {\n        throw new GraphQLError('Schema is not configured for mutations.', [operation]);\n      }\n\n      return mutationType;\n\n    case 'subscription':\n      var subscriptionType = schema.getSubscriptionType();\n\n      if (!subscriptionType) {\n        throw new GraphQLError('Schema is not configured for subscriptions.', [operation]);\n      }\n\n      return subscriptionType;\n\n    default:\n      throw new GraphQLError('Can only have query, mutation and subscription operations.', [operation]);\n  }\n}","map":{"version":3,"names":["GraphQLError","getOperationRootType","schema","operation","queryType","getQueryType","mutationType","getMutationType","subscriptionType","getSubscriptionType"],"sources":["/home/xl355/341/aws-bookstore-demo-app/assets/node_modules/@aws-amplify/api/node_modules/graphql/utilities/getOperationRootType.mjs"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\nimport { GraphQLError } from '../error/GraphQLError';\n\n/**\n * Extracts the root type of the operation from the schema.\n */\nexport function getOperationRootType(schema, operation) {\n  switch (operation.operation) {\n    case 'query':\n      var queryType = schema.getQueryType();\n\n      if (!queryType) {\n        throw new GraphQLError('Schema does not define the required query root type.', [operation]);\n      }\n\n      return queryType;\n\n    case 'mutation':\n      var mutationType = schema.getMutationType();\n\n      if (!mutationType) {\n        throw new GraphQLError('Schema is not configured for mutations.', [operation]);\n      }\n\n      return mutationType;\n\n    case 'subscription':\n      var subscriptionType = schema.getSubscriptionType();\n\n      if (!subscriptionType) {\n        throw new GraphQLError('Schema is not configured for subscriptions.', [operation]);\n      }\n\n      return subscriptionType;\n\n    default:\n      throw new GraphQLError('Can only have query, mutation and subscription operations.', [operation]);\n  }\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAT,QAA6B,uBAA7B;AAEA;AACA;AACA;;AACA,OAAO,SAASC,oBAAT,CAA8BC,MAA9B,EAAsCC,SAAtC,EAAiD;EACtD,QAAQA,SAAS,CAACA,SAAlB;IACE,KAAK,OAAL;MACE,IAAIC,SAAS,GAAGF,MAAM,CAACG,YAAP,EAAhB;;MAEA,IAAI,CAACD,SAAL,EAAgB;QACd,MAAM,IAAIJ,YAAJ,CAAiB,sDAAjB,EAAyE,CAACG,SAAD,CAAzE,CAAN;MACD;;MAED,OAAOC,SAAP;;IAEF,KAAK,UAAL;MACE,IAAIE,YAAY,GAAGJ,MAAM,CAACK,eAAP,EAAnB;;MAEA,IAAI,CAACD,YAAL,EAAmB;QACjB,MAAM,IAAIN,YAAJ,CAAiB,yCAAjB,EAA4D,CAACG,SAAD,CAA5D,CAAN;MACD;;MAED,OAAOG,YAAP;;IAEF,KAAK,cAAL;MACE,IAAIE,gBAAgB,GAAGN,MAAM,CAACO,mBAAP,EAAvB;;MAEA,IAAI,CAACD,gBAAL,EAAuB;QACrB,MAAM,IAAIR,YAAJ,CAAiB,6CAAjB,EAAgE,CAACG,SAAD,CAAhE,CAAN;MACD;;MAED,OAAOK,gBAAP;;IAEF;MACE,MAAM,IAAIR,YAAJ,CAAiB,4DAAjB,EAA+E,CAACG,SAAD,CAA/E,CAAN;EA7BJ;AA+BD"},"metadata":{},"sourceType":"module"}