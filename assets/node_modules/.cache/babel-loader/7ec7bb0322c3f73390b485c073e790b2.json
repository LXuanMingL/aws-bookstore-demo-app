{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nimport * as Cookies from 'js-cookie';\n/** @class */\n\nvar CookieStorage = function () {\n  /**\n   * Constructs a new CookieStorage object\n   * @param {object} data Creation options.\n   * @param {string} data.domain Cookies domain (mandatory).\n   * @param {string} data.path Cookies path (default: '/')\n   * @param {integer} data.expires Cookie expiration (in days, default: 365)\n   * @param {boolean} data.secure Cookie secure flag (default: true)\n   */\n  function CookieStorage(data) {\n    _classCallCheck(this, CookieStorage);\n\n    if (data.domain) {\n      this.domain = data.domain;\n    } else {\n      throw new Error('The domain of cookieStorage can not be undefined.');\n    }\n\n    if (data.path) {\n      this.path = data.path;\n    } else {\n      this.path = '/';\n    }\n\n    if (Object.prototype.hasOwnProperty.call(data, 'expires')) {\n      this.expires = data.expires;\n    } else {\n      this.expires = 365;\n    }\n\n    if (Object.prototype.hasOwnProperty.call(data, 'secure')) {\n      this.secure = data.secure;\n    } else {\n      this.secure = true;\n    }\n  }\n  /**\n   * This is used to set a specific item in storage\n   * @param {string} key - the key for the item\n   * @param {object} value - the value\n   * @returns {string} value that was set\n   */\n\n\n  CookieStorage.prototype.setItem = function setItem(key, value) {\n    Cookies.set(key, value, {\n      path: this.path,\n      expires: this.expires,\n      domain: this.domain,\n      secure: this.secure\n    });\n    return Cookies.get(key);\n  };\n  /**\n   * This is used to get a specific key from storage\n   * @param {string} key - the key for the item\n   * This is used to clear the storage\n   * @returns {string} the data item\n   */\n\n\n  CookieStorage.prototype.getItem = function getItem(key) {\n    return Cookies.get(key);\n  };\n  /**\n   * This is used to remove an item from storage\n   * @param {string} key - the key being set\n   * @returns {string} value - value that was deleted\n   */\n\n\n  CookieStorage.prototype.removeItem = function removeItem(key) {\n    return Cookies.remove(key, {\n      path: this.path,\n      domain: this.domain,\n      secure: this.secure\n    });\n  };\n  /**\n   * This is used to clear the storage\n   * @returns {string} nothing\n   */\n\n\n  CookieStorage.prototype.clear = function clear() {\n    var cookies = Cookies.get();\n    var index = void 0;\n\n    for (index = 0; index < cookies.length; ++index) {\n      Cookies.remove(cookies[index]);\n    }\n\n    return {};\n  };\n\n  return CookieStorage;\n}();\n\nexport default CookieStorage;","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","Cookies","CookieStorage","data","domain","Error","path","Object","prototype","hasOwnProperty","call","expires","secure","setItem","key","value","set","get","getItem","removeItem","remove","clear","cookies","index","length"],"sources":["/home/xl355/341/aws-bookstore-demo-app/assets/node_modules/amazon-cognito-identity-js/es/CookieStorage.js"],"sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport * as Cookies from 'js-cookie';\n\n/** @class */\n\nvar CookieStorage = function () {\n\t/**\n  * Constructs a new CookieStorage object\n  * @param {object} data Creation options.\n  * @param {string} data.domain Cookies domain (mandatory).\n  * @param {string} data.path Cookies path (default: '/')\n  * @param {integer} data.expires Cookie expiration (in days, default: 365)\n  * @param {boolean} data.secure Cookie secure flag (default: true)\n  */\n\tfunction CookieStorage(data) {\n\t\t_classCallCheck(this, CookieStorage);\n\n\t\tif (data.domain) {\n\t\t\tthis.domain = data.domain;\n\t\t} else {\n\t\t\tthrow new Error('The domain of cookieStorage can not be undefined.');\n\t\t}\n\t\tif (data.path) {\n\t\t\tthis.path = data.path;\n\t\t} else {\n\t\t\tthis.path = '/';\n\t\t}\n\t\tif (Object.prototype.hasOwnProperty.call(data, 'expires')) {\n\t\t\tthis.expires = data.expires;\n\t\t} else {\n\t\t\tthis.expires = 365;\n\t\t}\n\t\tif (Object.prototype.hasOwnProperty.call(data, 'secure')) {\n\t\t\tthis.secure = data.secure;\n\t\t} else {\n\t\t\tthis.secure = true;\n\t\t}\n\t}\n\n\t/**\n  * This is used to set a specific item in storage\n  * @param {string} key - the key for the item\n  * @param {object} value - the value\n  * @returns {string} value that was set\n  */\n\n\n\tCookieStorage.prototype.setItem = function setItem(key, value) {\n\t\tCookies.set(key, value, {\n\t\t\tpath: this.path,\n\t\t\texpires: this.expires,\n\t\t\tdomain: this.domain,\n\t\t\tsecure: this.secure\n\t\t});\n\t\treturn Cookies.get(key);\n\t};\n\n\t/**\n  * This is used to get a specific key from storage\n  * @param {string} key - the key for the item\n  * This is used to clear the storage\n  * @returns {string} the data item\n  */\n\n\n\tCookieStorage.prototype.getItem = function getItem(key) {\n\t\treturn Cookies.get(key);\n\t};\n\n\t/**\n  * This is used to remove an item from storage\n  * @param {string} key - the key being set\n  * @returns {string} value - value that was deleted\n  */\n\n\n\tCookieStorage.prototype.removeItem = function removeItem(key) {\n\t\treturn Cookies.remove(key, {\n\t\t\tpath: this.path,\n\t\t\tdomain: this.domain,\n\t\t\tsecure: this.secure\n\t\t});\n\t};\n\n\t/**\n  * This is used to clear the storage\n  * @returns {string} nothing\n  */\n\n\n\tCookieStorage.prototype.clear = function clear() {\n\t\tvar cookies = Cookies.get();\n\t\tvar index = void 0;\n\t\tfor (index = 0; index < cookies.length; ++index) {\n\t\t\tCookies.remove(cookies[index]);\n\t\t}\n\t\treturn {};\n\t};\n\n\treturn CookieStorage;\n}();\n\nexport default CookieStorage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}