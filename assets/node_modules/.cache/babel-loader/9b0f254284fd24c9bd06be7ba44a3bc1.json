{"ast":null,"code":"/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport AnalyticsClass from './Analytics';\nimport Amplify, { ConsoleLogger as Logger, Hub } from '@aws-amplify/core';\nvar logger = new Logger('Analytics');\nvar endpointUpdated = false;\nvar authConfigured = false;\nvar analyticsConfigured = false;\nvar _instance = null;\n\nif (!_instance) {\n  logger.debug('Create Analytics Instance');\n  _instance = new AnalyticsClass();\n}\n\nvar Analytics = _instance;\nAmplify.register(Analytics);\nexport default Analytics;\nexport { AnalyticsClass };\nexport * from './Providers';\n\nvar listener = function listener(capsule) {\n  var channel = capsule.channel,\n      payload = capsule.payload,\n      source = capsule.source;\n  logger.debug('on hub capsule ' + channel, payload);\n\n  switch (channel) {\n    case 'auth':\n      authEvent(payload);\n      break;\n\n    case 'storage':\n      storageEvent(payload);\n      break;\n\n    case 'analytics':\n      analyticsEvent(payload);\n      break;\n\n    default:\n      break;\n  }\n};\n\nvar storageEvent = function storageEvent(payload) {\n  var _a = payload.data,\n      attrs = _a.attrs,\n      metrics = _a.metrics;\n  if (!attrs) return;\n\n  if (analyticsConfigured) {\n    Analytics.record({\n      name: 'Storage',\n      attributes: attrs,\n      metrics: metrics\n    }).catch(function (e) {\n      logger.debug('Failed to send the storage event automatically', e);\n    });\n  }\n};\n\nvar authEvent = function authEvent(payload) {\n  var event = payload.event;\n\n  if (!event) {\n    return;\n  }\n\n  switch (event) {\n    case 'signIn':\n      if (authConfigured && analyticsConfigured) {\n        Analytics.record({\n          name: '_userauth.sign_in'\n        }).catch(function (e) {\n          logger.debug('Failed to send the sign in event automatically', e);\n        });\n      }\n\n      break;\n\n    case 'signUp':\n      if (authConfigured && analyticsConfigured) {\n        Analytics.record({\n          name: '_userauth.sign_up'\n        }).catch(function (e) {\n          logger.debug('Failed to send the sign up event automatically', e);\n        });\n      }\n\n      break;\n\n    case 'signOut':\n      break;\n\n    case 'signIn_failure':\n      if (authConfigured && analyticsConfigured) {\n        Analytics.record({\n          name: '_userauth.auth_fail'\n        }).catch(function (e) {\n          logger.debug('Failed to send the sign in failure event automatically', e);\n        });\n      }\n\n      break;\n\n    case 'configured':\n      authConfigured = true;\n\n      if (authConfigured && analyticsConfigured) {\n        sendEvents();\n      }\n\n      break;\n  }\n};\n\nvar analyticsEvent = function analyticsEvent(payload) {\n  var event = payload.event;\n  if (!event) return;\n\n  switch (event) {\n    case 'pinpointProvider_configured':\n      analyticsConfigured = true;\n\n      if (authConfigured && analyticsConfigured) {\n        sendEvents();\n      }\n\n      break;\n  }\n};\n\nvar sendEvents = function sendEvents() {\n  var config = Analytics.configure();\n\n  if (!endpointUpdated && config['autoSessionRecord']) {\n    Analytics.updateEndpoint({\n      immediate: true\n    }).catch(function (e) {\n      logger.debug('Failed to update the endpoint', e);\n    });\n    endpointUpdated = true;\n  }\n\n  Analytics.autoTrack('session', {\n    enable: config['autoSessionRecord']\n  });\n};\n\nHub.listen('auth', listener);\nHub.listen('storage', listener);\nHub.listen('analytics', listener);","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport AnalyticsClass from './Analytics';\nimport Amplify, { ConsoleLogger as Logger, Hub, } from '@aws-amplify/core';\nvar logger = new Logger('Analytics');\nvar endpointUpdated = false;\nvar authConfigured = false;\nvar analyticsConfigured = false;\nvar _instance = null;\nif (!_instance) {\n    logger.debug('Create Analytics Instance');\n    _instance = new AnalyticsClass();\n}\nvar Analytics = _instance;\nAmplify.register(Analytics);\nexport default Analytics;\nexport { AnalyticsClass };\nexport * from './Providers';\nvar listener = function (capsule) {\n    var channel = capsule.channel, payload = capsule.payload, source = capsule.source;\n    logger.debug('on hub capsule ' + channel, payload);\n    switch (channel) {\n        case 'auth':\n            authEvent(payload);\n            break;\n        case 'storage':\n            storageEvent(payload);\n            break;\n        case 'analytics':\n            analyticsEvent(payload);\n            break;\n        default:\n            break;\n    }\n};\nvar storageEvent = function (payload) {\n    var _a = payload.data, attrs = _a.attrs, metrics = _a.metrics;\n    if (!attrs)\n        return;\n    if (analyticsConfigured) {\n        Analytics.record({\n            name: 'Storage',\n            attributes: attrs,\n            metrics: metrics,\n        }).catch(function (e) {\n            logger.debug('Failed to send the storage event automatically', e);\n        });\n    }\n};\nvar authEvent = function (payload) {\n    var event = payload.event;\n    if (!event) {\n        return;\n    }\n    switch (event) {\n        case 'signIn':\n            if (authConfigured && analyticsConfigured) {\n                Analytics.record({\n                    name: '_userauth.sign_in',\n                }).catch(function (e) {\n                    logger.debug('Failed to send the sign in event automatically', e);\n                });\n            }\n            break;\n        case 'signUp':\n            if (authConfigured && analyticsConfigured) {\n                Analytics.record({\n                    name: '_userauth.sign_up',\n                }).catch(function (e) {\n                    logger.debug('Failed to send the sign up event automatically', e);\n                });\n            }\n            break;\n        case 'signOut':\n            break;\n        case 'signIn_failure':\n            if (authConfigured && analyticsConfigured) {\n                Analytics.record({\n                    name: '_userauth.auth_fail',\n                }).catch(function (e) {\n                    logger.debug('Failed to send the sign in failure event automatically', e);\n                });\n            }\n            break;\n        case 'configured':\n            authConfigured = true;\n            if (authConfigured && analyticsConfigured) {\n                sendEvents();\n            }\n            break;\n    }\n};\nvar analyticsEvent = function (payload) {\n    var event = payload.event;\n    if (!event)\n        return;\n    switch (event) {\n        case 'pinpointProvider_configured':\n            analyticsConfigured = true;\n            if (authConfigured && analyticsConfigured) {\n                sendEvents();\n            }\n            break;\n    }\n};\nvar sendEvents = function () {\n    var config = Analytics.configure();\n    if (!endpointUpdated && config['autoSessionRecord']) {\n        Analytics.updateEndpoint({ immediate: true }).catch(function (e) {\n            logger.debug('Failed to update the endpoint', e);\n        });\n        endpointUpdated = true;\n    }\n    Analytics.autoTrack('session', {\n        enable: config['autoSessionRecord'],\n    });\n};\nHub.listen('auth', listener);\nHub.listen('storage', listener);\nHub.listen('analytics', listener);\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}