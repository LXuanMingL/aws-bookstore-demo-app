{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport { Buffer } from 'buffer/';\n/** @class */\n\nvar CognitoJwtToken = function () {\n  /**\n   * Constructs a new CognitoJwtToken object\n   * @param {string=} token The JWT token.\n   */\n  function CognitoJwtToken(token) {\n    _classCallCheck(this, CognitoJwtToken); // Assign object\n\n\n    this.jwtToken = token || '';\n    this.payload = this.decodePayload();\n  }\n  /**\n   * @returns {string} the record's token.\n   */\n\n\n  CognitoJwtToken.prototype.getJwtToken = function getJwtToken() {\n    return this.jwtToken;\n  };\n  /**\n   * @returns {int} the token's expiration (exp member).\n   */\n\n\n  CognitoJwtToken.prototype.getExpiration = function getExpiration() {\n    return this.payload.exp;\n  };\n  /**\n   * @returns {int} the token's \"issued at\" (iat member).\n   */\n\n\n  CognitoJwtToken.prototype.getIssuedAt = function getIssuedAt() {\n    return this.payload.iat;\n  };\n  /**\n   * @returns {object} the token's payload.\n   */\n\n\n  CognitoJwtToken.prototype.decodePayload = function decodePayload() {\n    var payload = this.jwtToken.split('.')[1];\n\n    try {\n      return JSON.parse(Buffer.from(payload, 'base64').toString('utf8'));\n    } catch (err) {\n      return {};\n    }\n  };\n\n  return CognitoJwtToken;\n}();\n\nexport default CognitoJwtToken;","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","Buffer","CognitoJwtToken","token","jwtToken","payload","decodePayload","prototype","getJwtToken","getExpiration","exp","getIssuedAt","iat","split","JSON","parse","from","toString","err"],"sources":["/home/xl355/341/aws-bookstore-demo-app/assets/node_modules/amazon-cognito-identity-js/es/CognitoJwtToken.js"],"sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*!\n * Copyright 2016 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Amazon Software License (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n *\n *     http://aws.amazon.com/asl/\n *\n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Buffer } from 'buffer/';\n\n/** @class */\n\nvar CognitoJwtToken = function () {\n\t/**\n  * Constructs a new CognitoJwtToken object\n  * @param {string=} token The JWT token.\n  */\n\tfunction CognitoJwtToken(token) {\n\t\t_classCallCheck(this, CognitoJwtToken);\n\n\t\t// Assign object\n\t\tthis.jwtToken = token || '';\n\t\tthis.payload = this.decodePayload();\n\t}\n\n\t/**\n  * @returns {string} the record's token.\n  */\n\n\n\tCognitoJwtToken.prototype.getJwtToken = function getJwtToken() {\n\t\treturn this.jwtToken;\n\t};\n\n\t/**\n  * @returns {int} the token's expiration (exp member).\n  */\n\n\n\tCognitoJwtToken.prototype.getExpiration = function getExpiration() {\n\t\treturn this.payload.exp;\n\t};\n\n\t/**\n  * @returns {int} the token's \"issued at\" (iat member).\n  */\n\n\n\tCognitoJwtToken.prototype.getIssuedAt = function getIssuedAt() {\n\t\treturn this.payload.iat;\n\t};\n\n\t/**\n  * @returns {object} the token's payload.\n  */\n\n\n\tCognitoJwtToken.prototype.decodePayload = function decodePayload() {\n\t\tvar payload = this.jwtToken.split('.')[1];\n\t\ttry {\n\t\t\treturn JSON.parse(Buffer.from(payload, 'base64').toString('utf8'));\n\t\t} catch (err) {\n\t\t\treturn {};\n\t\t}\n\t};\n\n\treturn CognitoJwtToken;\n}();\n\nexport default CognitoJwtToken;"],"mappings":"AAAA,SAASA,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;EAAE,IAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;IAAE,MAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;EAA2D;AAAE;AAEzJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASC,MAAT,QAAuB,SAAvB;AAEA;;AAEA,IAAIC,eAAe,GAAG,YAAY;EACjC;AACD;AACA;AACA;EACC,SAASA,eAAT,CAAyBC,KAAzB,EAAgC;IAC/BN,eAAe,CAAC,IAAD,EAAOK,eAAP,CAAf,CAD+B,CAG/B;;;IACA,KAAKE,QAAL,GAAgBD,KAAK,IAAI,EAAzB;IACA,KAAKE,OAAL,GAAe,KAAKC,aAAL,EAAf;EACA;EAED;AACD;AACA;;;EAGCJ,eAAe,CAACK,SAAhB,CAA0BC,WAA1B,GAAwC,SAASA,WAAT,GAAuB;IAC9D,OAAO,KAAKJ,QAAZ;EACA,CAFD;EAIA;AACD;AACA;;;EAGCF,eAAe,CAACK,SAAhB,CAA0BE,aAA1B,GAA0C,SAASA,aAAT,GAAyB;IAClE,OAAO,KAAKJ,OAAL,CAAaK,GAApB;EACA,CAFD;EAIA;AACD;AACA;;;EAGCR,eAAe,CAACK,SAAhB,CAA0BI,WAA1B,GAAwC,SAASA,WAAT,GAAuB;IAC9D,OAAO,KAAKN,OAAL,CAAaO,GAApB;EACA,CAFD;EAIA;AACD;AACA;;;EAGCV,eAAe,CAACK,SAAhB,CAA0BD,aAA1B,GAA0C,SAASA,aAAT,GAAyB;IAClE,IAAID,OAAO,GAAG,KAAKD,QAAL,CAAcS,KAAd,CAAoB,GAApB,EAAyB,CAAzB,CAAd;;IACA,IAAI;MACH,OAAOC,IAAI,CAACC,KAAL,CAAWd,MAAM,CAACe,IAAP,CAAYX,OAAZ,EAAqB,QAArB,EAA+BY,QAA/B,CAAwC,MAAxC,CAAX,CAAP;IACA,CAFD,CAEE,OAAOC,GAAP,EAAY;MACb,OAAO,EAAP;IACA;EACD,CAPD;;EASA,OAAOhB,eAAP;AACA,CAvDqB,EAAtB;;AAyDA,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}