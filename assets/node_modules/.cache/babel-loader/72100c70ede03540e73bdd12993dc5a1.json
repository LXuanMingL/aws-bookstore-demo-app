{"ast":null,"code":"/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n\n  return r;\n};\n\nimport { ConsoleLogger as Logger } from './Logger';\nvar logger = new Logger('Hub');\nvar AMPLIFY_SYMBOL = typeof Symbol !== 'undefined' && typeof Symbol.for === 'function' ? Symbol.for('amplify_default') : '@@amplify_default';\n\nfunction isLegacyCallback(callback) {\n  return callback.onHubCapsule !== undefined;\n}\n\nvar HubClass =\n/** @class */\nfunction () {\n  function HubClass(name) {\n    this.listeners = [];\n    this.patterns = [];\n    this.protectedChannels = ['core', 'auth', 'api', 'analytics', 'interactions', 'pubsub', 'storage', 'xr'];\n    this.name = name;\n  } // Note - Need to pass channel as a reference for removal to work and not anonymous function\n\n\n  HubClass.prototype.remove = function (channel, listener) {\n    if (channel instanceof RegExp) {\n      var pattern_1 = this.patterns.find(function (_a) {\n        var pattern = _a.pattern;\n        return pattern.source === channel.source;\n      });\n\n      if (!pattern_1) {\n        logger.warn(\"No listeners for \" + channel);\n        return;\n      }\n\n      this.patterns = __spreadArrays(this.patterns.filter(function (x) {\n        return x !== pattern_1;\n      }));\n    } else {\n      var holder = this.listeners[channel];\n\n      if (!holder) {\n        logger.warn(\"No listeners for \" + channel);\n        return;\n      }\n\n      this.listeners[channel] = __spreadArrays(holder.filter(function (_a) {\n        var callback = _a.callback;\n        return callback !== listener;\n      }));\n    }\n  };\n\n  HubClass.prototype.dispatch = function (channel, payload, source, ampSymbol) {\n    if (source === void 0) {\n      source = '';\n    }\n\n    if (this.protectedChannels.indexOf(channel) > -1) {\n      var hasAccess = ampSymbol === AMPLIFY_SYMBOL;\n\n      if (!hasAccess) {\n        logger.warn(\"WARNING: \" + channel + \" is protected and dispatching on it can have unintended consequences\");\n      }\n    }\n\n    var capsule = {\n      channel: channel,\n      payload: __assign({}, payload),\n      source: source,\n      patternInfo: []\n    };\n\n    try {\n      this._toListeners(capsule);\n    } catch (e) {\n      logger.error(e);\n    }\n  };\n\n  HubClass.prototype.listen = function (channel, callback, listenerName) {\n    if (listenerName === void 0) {\n      listenerName = 'noname';\n    }\n\n    var cb; // Check for legacy onHubCapsule callback for backwards compatability\n\n    if (isLegacyCallback(callback)) {\n      logger.warn(\"WARNING onHubCapsule is Deprecated. Please pass in a callback.\");\n      cb = callback.onHubCapsule.bind(callback);\n    } else if (typeof callback !== 'function') {\n      throw new Error('No callback supplied to Hub');\n    } else {\n      cb = callback;\n    }\n\n    if (channel instanceof RegExp) {\n      this.patterns.push({\n        pattern: channel,\n        callback: cb\n      });\n    } else {\n      var holder = this.listeners[channel];\n\n      if (!holder) {\n        holder = [];\n        this.listeners[channel] = holder;\n      }\n\n      holder.push({\n        name: listenerName,\n        callback: cb\n      });\n    }\n  };\n\n  HubClass.prototype._toListeners = function (capsule) {\n    var channel = capsule.channel,\n        payload = capsule.payload;\n    var holder = this.listeners[channel];\n\n    if (holder) {\n      holder.forEach(function (listener) {\n        logger.debug(\"Dispatching to \" + channel + \" with \", payload);\n\n        try {\n          listener.callback(capsule);\n        } catch (e) {\n          logger.error(e);\n        }\n      });\n    }\n\n    if (this.patterns.length > 0) {\n      if (!payload.message) {\n        logger.warn(\"Cannot perform pattern matching without a message key\");\n        return;\n      }\n\n      var payloadStr_1 = payload.message;\n      this.patterns.forEach(function (pattern) {\n        var match = payloadStr_1.match(pattern.pattern);\n\n        if (match) {\n          var groups = match.slice(1);\n\n          var dispatchingCapsule = __assign(__assign({}, capsule), {\n            patternInfo: groups\n          });\n\n          try {\n            pattern.callback(dispatchingCapsule);\n          } catch (e) {\n            logger.error(e);\n          }\n        }\n      });\n    }\n  };\n\n  return HubClass;\n}();\n\nexport { HubClass };\n/*We export a __default__ instance of HubClass to use it as a\npsuedo Singleton for the main messaging bus, however you can still create\nyour own instance of HubClass() for a separate \"private bus\" of events.*/\n\nvar Hub = new HubClass('__default__');\nexport default Hub;","map":{"version":3,"sources":["../src/Hub.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;AAWG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH,SAAS,aAAa,IAAI,MAA1B,QAAwC,UAAxC;AAEA,IAAM,MAAM,GAAG,IAAI,MAAJ,CAAW,KAAX,CAAf;AAEA,IAAM,cAAc,GAAI,OAAO,MAAP,KAAkB,WAAlB,IACxB,OAAO,MAAM,CAAC,GAAd,KAAsB,UADE,GAErB,MAAM,CAAC,GAAP,CAAW,iBAAX,CAFqB,GAGrB,mBAHH;;AA+BA,SAAS,gBAAT,CAA0B,QAA1B,EAAuC;EACtC,OAAwB,QAAS,CAAC,YAAV,KAA2B,SAAnD;AACA;;AAED,IAAA,QAAA;AAAA;AAAA,YAAA;EAgBC,SAAA,QAAA,CAAY,IAAZ,EAAwB;IAdhB,KAAA,SAAA,GAAyB,EAAzB;IACA,KAAA,QAAA,GAAuB,EAAvB;IAER,KAAA,iBAAA,GAAoB,CACnB,MADmB,EAEnB,MAFmB,EAGnB,KAHmB,EAInB,WAJmB,EAKnB,cALmB,EAMnB,QANmB,EAOnB,SAPmB,EAQnB,IARmB,CAApB;IAYC,KAAK,IAAL,GAAY,IAAZ;EACA,CAlBF,CAoBC;;;EACA,QAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,OAAP,EAAiC,QAAjC,EAAsD;IACrD,IAAI,OAAO,YAAY,MAAvB,EAA+B;MAC9B,IAAM,SAAO,GAAG,KAAK,QAAL,CAAc,IAAd,CACf,UAAC,EAAD,EAAY;YAAT,OAAA,GAAA,EAAA,CAAA,O;QAAc,OAAA,OAAO,CAAC,MAAR,KAAmB,OAAO,CAAC,MAA3B;MAAiC,CADnC,CAAhB;;MAGA,IAAI,CAAC,SAAL,EAAc;QACb,MAAM,CAAC,IAAP,CAAY,sBAAoB,OAAhC;QACA;MACA;;MACD,KAAK,QAAL,GAAa,cAAA,CAAO,KAAK,QAAL,CAAc,MAAd,CAAqB,UAAA,CAAA,EAAC;QAAI,OAAA,CAAC,KAAD,SAAA;MAAa,CAAvC,CAAP,CAAb;IACA,CATD,MASO;MACN,IAAM,MAAM,GAAG,KAAK,SAAL,CAAe,OAAf,CAAf;;MACA,IAAI,CAAC,MAAL,EAAa;QACZ,MAAM,CAAC,IAAP,CAAY,sBAAoB,OAAhC;QACA;MACA;;MACD,KAAK,SAAL,CAAe,OAAf,IAAuB,cAAA,CACnB,MAAM,CAAC,MAAP,CAAc,UAAC,EAAD,EAAa;YAAV,QAAA,GAAA,EAAA,CAAA,Q;QAAe,OAAA,QAAQ,KAAK,QAAb;MAAqB,CAArD,CADmB,CAAvB;IAGA;EACD,CApBD;;EAsBA,QAAA,CAAA,SAAA,CAAA,QAAA,GAAA,UACC,OADD,EAEC,OAFD,EAGC,MAHD,EAIC,SAJD,EAImB;IADlB,IAAA,MAAA,KAAA,KAAA,CAAA,EAAA;MAAA,MAAA,GAAA,EAAA;IAAmB;;IAGnB,IAAI,KAAK,iBAAL,CAAuB,OAAvB,CAA+B,OAA/B,IAA0C,CAAC,CAA/C,EAAkD;MACjD,IAAM,SAAS,GAAG,SAAS,KAAK,cAAhC;;MAEA,IAAI,CAAC,SAAL,EAAgB;QACf,MAAM,CAAC,IAAP,CACC,cAAY,OAAZ,GAAmB,sEADpB;MAGA;IACD;;IAED,IAAM,OAAO,GAAe;MAC3B,OAAO,EAAA,OADoB;MAE3B,OAAO,EAAA,QAAA,CAAA,EAAA,EAAO,OAAP,CAFoB;MAG3B,MAAM,EAAA,MAHqB;MAI3B,WAAW,EAAE;IAJc,CAA5B;;IAOA,IAAI;MACH,KAAK,YAAL,CAAkB,OAAlB;IACA,CAFD,CAEE,OAAO,CAAP,EAAU;MACX,MAAM,CAAC,KAAP,CAAa,CAAb;IACA;EACD,CA5BD;;EA8BA,QAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UACC,OADD,EAEC,QAFD,EAGC,YAHD,EAGwB;IAAvB,IAAA,YAAA,KAAA,KAAA,CAAA,EAAA;MAAA,YAAA,GAAA,QAAA;IAAuB;;IAEvB,IAAI,EAAJ,CAFuB,CAGvB;;IACA,IAAI,gBAAgB,CAAC,QAAD,CAApB,EAAgC;MAC/B,MAAM,CAAC,IAAP,CACC,gEADD;MAGA,EAAE,GAAG,QAAQ,CAAC,YAAT,CAAsB,IAAtB,CAA2B,QAA3B,CAAL;IACA,CALD,MAKO,IAAI,OAAO,QAAP,KAAoB,UAAxB,EAAoC;MAC1C,MAAM,IAAI,KAAJ,CAAU,6BAAV,CAAN;IACA,CAFM,MAEA;MACN,EAAE,GAAG,QAAL;IACA;;IAED,IAAI,OAAO,YAAY,MAAvB,EAA+B;MAC9B,KAAK,QAAL,CAAc,IAAd,CAAmB;QAClB,OAAO,EAAE,OADS;QAElB,QAAQ,EAAE;MAFQ,CAAnB;IAIA,CALD,MAKO;MACN,IAAI,MAAM,GAAG,KAAK,SAAL,CAAe,OAAf,CAAb;;MAEA,IAAI,CAAC,MAAL,EAAa;QACZ,MAAM,GAAG,EAAT;QACA,KAAK,SAAL,CAAe,OAAf,IAA0B,MAA1B;MACA;;MAED,MAAM,CAAC,IAAP,CAAY;QACX,IAAI,EAAE,YADK;QAEX,QAAQ,EAAE;MAFC,CAAZ;IAIA;EACD,CApCD;;EAsCQ,QAAA,CAAA,SAAA,CAAA,YAAA,GAAR,UAAqB,OAArB,EAAwC;IAC/B,IAAA,OAAA,GAAA,OAAA,CAAA,OAAA;IAAA,IAAS,OAAA,GAAA,OAAA,CAAA,OAAT;IACR,IAAM,MAAM,GAAG,KAAK,SAAL,CAAe,OAAf,CAAf;;IAEA,IAAI,MAAJ,EAAY;MACX,MAAM,CAAC,OAAP,CAAe,UAAA,QAAA,EAAQ;QACtB,MAAM,CAAC,KAAP,CAAa,oBAAkB,OAAlB,GAAyB,QAAtC,EAAgD,OAAhD;;QACA,IAAI;UACH,QAAQ,CAAC,QAAT,CAAkB,OAAlB;QACA,CAFD,CAEE,OAAO,CAAP,EAAU;UACX,MAAM,CAAC,KAAP,CAAa,CAAb;QACA;MACD,CAPD;IAQA;;IAED,IAAI,KAAK,QAAL,CAAc,MAAd,GAAuB,CAA3B,EAA8B;MAC7B,IAAI,CAAC,OAAO,CAAC,OAAb,EAAsB;QACrB,MAAM,CAAC,IAAP,CAAY,uDAAZ;QACA;MACA;;MAED,IAAM,YAAU,GAAG,OAAO,CAAC,OAA3B;MAEA,KAAK,QAAL,CAAc,OAAd,CAAsB,UAAA,OAAA,EAAO;QAC5B,IAAM,KAAK,GAAG,YAAU,CAAC,KAAX,CAAiB,OAAO,CAAC,OAAzB,CAAd;;QACA,IAAI,KAAJ,EAAW;UACD,IAAA,MAAA,GAAA,KAAA,CAAA,KAAA,CAAA,CAAA,CAAA;;UACT,IAAM,kBAAkB,GAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACpB,OADoB,CAAA,EACb;YACV,WAAW,EAAE;UADH,CADa,CAAxB;;UAIA,IAAI;YACH,OAAO,CAAC,QAAR,CAAiB,kBAAjB;UACA,CAFD,CAEE,OAAO,CAAP,EAAU;YACX,MAAM,CAAC,KAAP,CAAa,CAAb;UACA;QACD;MACD,CAdD;IAeA;EACD,CAvCO;;EAwCT,OAAA,QAAA;AAAC,CAvJD,EAAA;;;AAyJA;;AAEyE;;AACzE,IAAM,GAAG,GAAG,IAAI,QAAJ,CAAa,aAAb,CAAZ;AACA,eAAe,GAAf","sourceRoot":"","sourcesContent":["/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { ConsoleLogger as Logger } from './Logger';\nvar logger = new Logger('Hub');\nvar AMPLIFY_SYMBOL = (typeof Symbol !== 'undefined' &&\n    typeof Symbol.for === 'function'\n    ? Symbol.for('amplify_default')\n    : '@@amplify_default');\nfunction isLegacyCallback(callback) {\n    return callback.onHubCapsule !== undefined;\n}\nvar HubClass = /** @class */ (function () {\n    function HubClass(name) {\n        this.listeners = [];\n        this.patterns = [];\n        this.protectedChannels = [\n            'core',\n            'auth',\n            'api',\n            'analytics',\n            'interactions',\n            'pubsub',\n            'storage',\n            'xr',\n        ];\n        this.name = name;\n    }\n    // Note - Need to pass channel as a reference for removal to work and not anonymous function\n    HubClass.prototype.remove = function (channel, listener) {\n        if (channel instanceof RegExp) {\n            var pattern_1 = this.patterns.find(function (_a) {\n                var pattern = _a.pattern;\n                return pattern.source === channel.source;\n            });\n            if (!pattern_1) {\n                logger.warn(\"No listeners for \" + channel);\n                return;\n            }\n            this.patterns = __spreadArrays(this.patterns.filter(function (x) { return x !== pattern_1; }));\n        }\n        else {\n            var holder = this.listeners[channel];\n            if (!holder) {\n                logger.warn(\"No listeners for \" + channel);\n                return;\n            }\n            this.listeners[channel] = __spreadArrays(holder.filter(function (_a) {\n                var callback = _a.callback;\n                return callback !== listener;\n            }));\n        }\n    };\n    HubClass.prototype.dispatch = function (channel, payload, source, ampSymbol) {\n        if (source === void 0) { source = ''; }\n        if (this.protectedChannels.indexOf(channel) > -1) {\n            var hasAccess = ampSymbol === AMPLIFY_SYMBOL;\n            if (!hasAccess) {\n                logger.warn(\"WARNING: \" + channel + \" is protected and dispatching on it can have unintended consequences\");\n            }\n        }\n        var capsule = {\n            channel: channel,\n            payload: __assign({}, payload),\n            source: source,\n            patternInfo: [],\n        };\n        try {\n            this._toListeners(capsule);\n        }\n        catch (e) {\n            logger.error(e);\n        }\n    };\n    HubClass.prototype.listen = function (channel, callback, listenerName) {\n        if (listenerName === void 0) { listenerName = 'noname'; }\n        var cb;\n        // Check for legacy onHubCapsule callback for backwards compatability\n        if (isLegacyCallback(callback)) {\n            logger.warn(\"WARNING onHubCapsule is Deprecated. Please pass in a callback.\");\n            cb = callback.onHubCapsule.bind(callback);\n        }\n        else if (typeof callback !== 'function') {\n            throw new Error('No callback supplied to Hub');\n        }\n        else {\n            cb = callback;\n        }\n        if (channel instanceof RegExp) {\n            this.patterns.push({\n                pattern: channel,\n                callback: cb,\n            });\n        }\n        else {\n            var holder = this.listeners[channel];\n            if (!holder) {\n                holder = [];\n                this.listeners[channel] = holder;\n            }\n            holder.push({\n                name: listenerName,\n                callback: cb,\n            });\n        }\n    };\n    HubClass.prototype._toListeners = function (capsule) {\n        var channel = capsule.channel, payload = capsule.payload;\n        var holder = this.listeners[channel];\n        if (holder) {\n            holder.forEach(function (listener) {\n                logger.debug(\"Dispatching to \" + channel + \" with \", payload);\n                try {\n                    listener.callback(capsule);\n                }\n                catch (e) {\n                    logger.error(e);\n                }\n            });\n        }\n        if (this.patterns.length > 0) {\n            if (!payload.message) {\n                logger.warn(\"Cannot perform pattern matching without a message key\");\n                return;\n            }\n            var payloadStr_1 = payload.message;\n            this.patterns.forEach(function (pattern) {\n                var match = payloadStr_1.match(pattern.pattern);\n                if (match) {\n                    var groups = match.slice(1);\n                    var dispatchingCapsule = __assign(__assign({}, capsule), { patternInfo: groups });\n                    try {\n                        pattern.callback(dispatchingCapsule);\n                    }\n                    catch (e) {\n                        logger.error(e);\n                    }\n                }\n            });\n        }\n    };\n    return HubClass;\n}());\nexport { HubClass };\n/*We export a __default__ instance of HubClass to use it as a\npsuedo Singleton for the main messaging bus, however you can still create\nyour own instance of HubClass() for a separate \"private bus\" of events.*/\nvar Hub = new HubClass('__default__');\nexport default Hub;\n//# sourceMappingURL=Hub.js.map"]},"metadata":{},"sourceType":"module"}