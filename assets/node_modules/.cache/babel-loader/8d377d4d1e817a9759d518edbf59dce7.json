{"ast":null,"code":"var AWS = require('../core');\n\nrequire('../rds/signer');\n/**\n * @api private\n */\n\n\nvar crossRegionOperations = ['copyDBSnapshot', 'createDBInstanceReadReplica', 'createDBCluster', 'copyDBClusterSnapshot'];\nAWS.util.update(AWS.RDS.prototype, {\n  /**\n   * @api private\n   */\n  setupRequestListeners: function setupRequestListeners(request) {\n    if (crossRegionOperations.indexOf(request.operation) !== -1 && request.params.SourceRegion) {\n      request.params = AWS.util.copy(request.params);\n\n      if (request.params.PreSignedUrl || request.params.SourceRegion === this.config.region) {\n        delete request.params.SourceRegion;\n      } else {\n        var doesParamValidation = !!this.config.paramValidation; // remove the validate parameters listener so we can re-add it after we build the URL\n\n        if (doesParamValidation) {\n          request.removeListener('validate', AWS.EventListeners.Core.VALIDATE_PARAMETERS);\n        }\n\n        request.onAsync('validate', this.buildCrossRegionPresignedUrl);\n\n        if (doesParamValidation) {\n          request.addListener('validate', AWS.EventListeners.Core.VALIDATE_PARAMETERS);\n        }\n      }\n    }\n  },\n\n  /**\n   * @api private\n   */\n  buildCrossRegionPresignedUrl: function buildCrossRegionPresignedUrl(req, done) {\n    var config = AWS.util.copy(req.service.config);\n    config.region = req.params.SourceRegion;\n    delete req.params.SourceRegion;\n    delete config.endpoint; // relevant params for the operation will already be in req.params\n\n    delete config.params;\n    config.signatureVersion = 'v4';\n    var destinationRegion = req.service.config.region;\n    var svc = new req.service.constructor(config);\n    var newReq = svc[req.operation](AWS.util.copy(req.params));\n    newReq.on('build', function addDestinationRegionParam(request) {\n      var httpRequest = request.httpRequest;\n      httpRequest.params.DestinationRegion = destinationRegion;\n      httpRequest.body = AWS.util.queryParamsToString(httpRequest.params);\n    });\n    newReq.presign(function (err, url) {\n      if (err) done(err);else {\n        req.params.PreSignedUrl = url;\n        done();\n      }\n    });\n  }\n});","map":{"version":3,"names":["AWS","require","crossRegionOperations","util","update","RDS","prototype","setupRequestListeners","request","indexOf","operation","params","SourceRegion","copy","PreSignedUrl","config","region","doesParamValidation","paramValidation","removeListener","EventListeners","Core","VALIDATE_PARAMETERS","onAsync","buildCrossRegionPresignedUrl","addListener","req","done","service","endpoint","signatureVersion","destinationRegion","svc","constructor","newReq","on","addDestinationRegionParam","httpRequest","DestinationRegion","body","queryParamsToString","presign","err","url"],"sources":["/home/xl355/341/aws-bookstore-demo-app/assets/node_modules/aws-sdk/lib/services/rds.js"],"sourcesContent":["var AWS = require('../core');\nrequire('../rds/signer');\n /**\n  * @api private\n  */\n var crossRegionOperations = ['copyDBSnapshot', 'createDBInstanceReadReplica', 'createDBCluster', 'copyDBClusterSnapshot'];\n\n AWS.util.update(AWS.RDS.prototype, {\n   /**\n    * @api private\n    */\n   setupRequestListeners: function setupRequestListeners(request) {\n     if (crossRegionOperations.indexOf(request.operation) !== -1 &&\n         request.params.SourceRegion) {\n       request.params = AWS.util.copy(request.params);\n       if (request.params.PreSignedUrl ||\n           request.params.SourceRegion === this.config.region) {\n         delete request.params.SourceRegion;\n       } else {\n         var doesParamValidation = !!this.config.paramValidation;\n         // remove the validate parameters listener so we can re-add it after we build the URL\n         if (doesParamValidation) {\n           request.removeListener('validate', AWS.EventListeners.Core.VALIDATE_PARAMETERS);\n         }\n         request.onAsync('validate', this.buildCrossRegionPresignedUrl);\n         if (doesParamValidation) {\n           request.addListener('validate', AWS.EventListeners.Core.VALIDATE_PARAMETERS);\n         }\n       }\n     }\n   },\n\n   /**\n    * @api private\n    */\n   buildCrossRegionPresignedUrl: function buildCrossRegionPresignedUrl(req, done) {\n     var config = AWS.util.copy(req.service.config);\n     config.region = req.params.SourceRegion;\n     delete req.params.SourceRegion;\n     delete config.endpoint;\n     // relevant params for the operation will already be in req.params\n     delete config.params;\n     config.signatureVersion = 'v4';\n     var destinationRegion = req.service.config.region;\n\n     var svc = new req.service.constructor(config);\n     var newReq = svc[req.operation](AWS.util.copy(req.params));\n     newReq.on('build', function addDestinationRegionParam(request) {\n       var httpRequest = request.httpRequest;\n       httpRequest.params.DestinationRegion = destinationRegion;\n       httpRequest.body = AWS.util.queryParamsToString(httpRequest.params);\n     });\n     newReq.presign(function(err, url) {\n       if (err) done(err);\n       else {\n         req.params.PreSignedUrl = url;\n         done();\n       }\n     });\n   }\n });\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}