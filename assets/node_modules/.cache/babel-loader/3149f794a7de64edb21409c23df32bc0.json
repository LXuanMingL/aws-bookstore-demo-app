{"ast":null,"code":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\nimport { GraphQLError } from '../../error/GraphQLError';\nexport function undefinedVarMessage(varName, opName) {\n  return opName ? \"Variable \\\"$\".concat(varName, \"\\\" is not defined by operation \\\"\").concat(opName, \"\\\".\") : \"Variable \\\"$\".concat(varName, \"\\\" is not defined.\");\n}\n/**\n * No undefined variables\n *\n * A GraphQL operation is only valid if all variables encountered, both directly\n * and via fragment spreads, are defined by that operation.\n */\n\nexport function NoUndefinedVariables(context) {\n  var variableNameDefined = Object.create(null);\n  return {\n    OperationDefinition: {\n      enter: function enter() {\n        variableNameDefined = Object.create(null);\n      },\n      leave: function leave(operation) {\n        var usages = context.getRecursiveVariableUsages(operation);\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = usages[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var _ref2 = _step.value;\n            var node = _ref2.node;\n            var varName = node.name.value;\n\n            if (variableNameDefined[varName] !== true) {\n              context.reportError(new GraphQLError(undefinedVarMessage(varName, operation.name && operation.name.value), [node, operation]));\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n    },\n    VariableDefinition: function VariableDefinition(node) {\n      variableNameDefined[node.variable.name.value] = true;\n    }\n  };\n}","map":{"version":3,"names":["GraphQLError","undefinedVarMessage","varName","opName","concat","NoUndefinedVariables","context","variableNameDefined","Object","create","OperationDefinition","enter","leave","operation","usages","getRecursiveVariableUsages","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","Symbol","iterator","_step","next","done","_ref2","value","node","name","reportError","err","return","VariableDefinition","variable"],"sources":["/home/xl355/341/aws-bookstore-demo-app/assets/node_modules/@aws-amplify/api/node_modules/graphql/validation/rules/NoUndefinedVariables.mjs"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\nimport { GraphQLError } from '../../error/GraphQLError';\nexport function undefinedVarMessage(varName, opName) {\n  return opName ? \"Variable \\\"$\".concat(varName, \"\\\" is not defined by operation \\\"\").concat(opName, \"\\\".\") : \"Variable \\\"$\".concat(varName, \"\\\" is not defined.\");\n}\n/**\n * No undefined variables\n *\n * A GraphQL operation is only valid if all variables encountered, both directly\n * and via fragment spreads, are defined by that operation.\n */\n\nexport function NoUndefinedVariables(context) {\n  var variableNameDefined = Object.create(null);\n  return {\n    OperationDefinition: {\n      enter: function enter() {\n        variableNameDefined = Object.create(null);\n      },\n      leave: function leave(operation) {\n        var usages = context.getRecursiveVariableUsages(operation);\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = usages[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var _ref2 = _step.value;\n            var node = _ref2.node;\n            var varName = node.name.value;\n\n            if (variableNameDefined[varName] !== true) {\n              context.reportError(new GraphQLError(undefinedVarMessage(varName, operation.name && operation.name.value), [node, operation]));\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n    },\n    VariableDefinition: function VariableDefinition(node) {\n      variableNameDefined[node.variable.name.value] = true;\n    }\n  };\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAT,QAA6B,0BAA7B;AACA,OAAO,SAASC,mBAAT,CAA6BC,OAA7B,EAAsCC,MAAtC,EAA8C;EACnD,OAAOA,MAAM,GAAG,eAAeC,MAAf,CAAsBF,OAAtB,EAA+B,mCAA/B,EAAoEE,MAApE,CAA2ED,MAA3E,EAAmF,KAAnF,CAAH,GAA+F,eAAeC,MAAf,CAAsBF,OAAtB,EAA+B,oBAA/B,CAA5G;AACD;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASG,oBAAT,CAA8BC,OAA9B,EAAuC;EAC5C,IAAIC,mBAAmB,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAA1B;EACA,OAAO;IACLC,mBAAmB,EAAE;MACnBC,KAAK,EAAE,SAASA,KAAT,GAAiB;QACtBJ,mBAAmB,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAtB;MACD,CAHkB;MAInBG,KAAK,EAAE,SAASA,KAAT,CAAeC,SAAf,EAA0B;QAC/B,IAAIC,MAAM,GAAGR,OAAO,CAACS,0BAAR,CAAmCF,SAAnC,CAAb;QACA,IAAIG,yBAAyB,GAAG,IAAhC;QACA,IAAIC,iBAAiB,GAAG,KAAxB;QACA,IAAIC,cAAc,GAAGC,SAArB;;QAEA,IAAI;UACF,KAAK,IAAIC,SAAS,GAAGN,MAAM,CAACO,MAAM,CAACC,QAAR,CAAN,EAAhB,EAA2CC,KAAhD,EAAuD,EAAEP,yBAAyB,GAAG,CAACO,KAAK,GAAGH,SAAS,CAACI,IAAV,EAAT,EAA2BC,IAAzD,CAAvD,EAAuHT,yBAAyB,GAAG,IAAnJ,EAAyJ;YACvJ,IAAIU,KAAK,GAAGH,KAAK,CAACI,KAAlB;YACA,IAAIC,IAAI,GAAGF,KAAK,CAACE,IAAjB;YACA,IAAI1B,OAAO,GAAG0B,IAAI,CAACC,IAAL,CAAUF,KAAxB;;YAEA,IAAIpB,mBAAmB,CAACL,OAAD,CAAnB,KAAiC,IAArC,EAA2C;cACzCI,OAAO,CAACwB,WAAR,CAAoB,IAAI9B,YAAJ,CAAiBC,mBAAmB,CAACC,OAAD,EAAUW,SAAS,CAACgB,IAAV,IAAkBhB,SAAS,CAACgB,IAAV,CAAeF,KAA3C,CAApC,EAAuF,CAACC,IAAD,EAAOf,SAAP,CAAvF,CAApB;YACD;UACF;QACF,CAVD,CAUE,OAAOkB,GAAP,EAAY;UACZd,iBAAiB,GAAG,IAApB;UACAC,cAAc,GAAGa,GAAjB;QACD,CAbD,SAaU;UACR,IAAI;YACF,IAAI,CAACf,yBAAD,IAA8BI,SAAS,CAACY,MAAV,IAAoB,IAAtD,EAA4D;cAC1DZ,SAAS,CAACY,MAAV;YACD;UACF,CAJD,SAIU;YACR,IAAIf,iBAAJ,EAAuB;cACrB,MAAMC,cAAN;YACD;UACF;QACF;MACF;IAlCkB,CADhB;IAqCLe,kBAAkB,EAAE,SAASA,kBAAT,CAA4BL,IAA5B,EAAkC;MACpDrB,mBAAmB,CAACqB,IAAI,CAACM,QAAL,CAAcL,IAAd,CAAmBF,KAApB,CAAnB,GAAgD,IAAhD;IACD;EAvCI,CAAP;AAyCD"},"metadata":{},"sourceType":"module"}