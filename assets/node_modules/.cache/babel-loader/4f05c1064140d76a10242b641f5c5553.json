{"ast":null,"code":"/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { getCurrTime, getByteLength, defaultConfig, isInteger } from './Utils';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('StorageCache');\n/**\n * Initialization of the cache\n *\n */\n\nvar StorageCache =\n/** @class */\nfunction () {\n  /**\n   * Initialize the cache\n   * @param config - the configuration of the cache\n   */\n  function StorageCache(config) {\n    this.config = Object.assign({}, config);\n    this.cacheCurSizeKey = this.config.keyPrefix + 'CurSize';\n    this.checkConfig();\n  }\n\n  StorageCache.prototype.getModuleName = function () {\n    return 'Cache';\n  };\n\n  StorageCache.prototype.checkConfig = function () {\n    // check configuration\n    if (!isInteger(this.config.capacityInBytes)) {\n      logger.error('Invalid parameter: capacityInBytes. It should be an Integer. Setting back to default.');\n      this.config.capacityInBytes = defaultConfig.capacityInBytes;\n    }\n\n    if (!isInteger(this.config.itemMaxSize)) {\n      logger.error('Invalid parameter: itemMaxSize. It should be an Integer. Setting back to default.');\n      this.config.itemMaxSize = defaultConfig.itemMaxSize;\n    }\n\n    if (!isInteger(this.config.defaultTTL)) {\n      logger.error('Invalid parameter: defaultTTL. It should be an Integer. Setting back to default.');\n      this.config.defaultTTL = defaultConfig.defaultTTL;\n    }\n\n    if (!isInteger(this.config.defaultPriority)) {\n      logger.error('Invalid parameter: defaultPriority. It should be an Integer. Setting back to default.');\n      this.config.defaultPriority = defaultConfig.defaultPriority;\n    }\n\n    if (this.config.itemMaxSize > this.config.capacityInBytes) {\n      logger.error('Invalid parameter: itemMaxSize. It should be smaller than capacityInBytes. Setting back to default.');\n      this.config.itemMaxSize = defaultConfig.itemMaxSize;\n    }\n\n    if (this.config.defaultPriority > 5 || this.config.defaultPriority < 1) {\n      logger.error('Invalid parameter: defaultPriority. It should be between 1 and 5. Setting back to default.');\n      this.config.defaultPriority = defaultConfig.defaultPriority;\n    }\n\n    if (Number(this.config.warningThreshold) > 1 || Number(this.config.warningThreshold) < 0) {\n      logger.error('Invalid parameter: warningThreshold. It should be between 0 and 1. Setting back to default.');\n      this.config.warningThreshold = defaultConfig.warningThreshold;\n    } // set 5MB limit\n\n\n    var cacheLimit = 5 * 1024 * 1024;\n\n    if (this.config.capacityInBytes > cacheLimit) {\n      logger.error('Cache Capacity should be less than 5MB. Setting back to default. Setting back to default.');\n      this.config.capacityInBytes = defaultConfig.capacityInBytes;\n    }\n  };\n  /**\n   * produce a JSON object with meta-data and data value\n   * @param value - the value of the item\n   * @param options - optional, the specified meta-data\n   *\n   * @return - the item which has the meta-data and the value\n   */\n\n\n  StorageCache.prototype.fillCacheItem = function (key, value, options) {\n    var ret = {\n      key: key,\n      data: value,\n      timestamp: getCurrTime(),\n      visitedTime: getCurrTime(),\n      priority: options.priority,\n      expires: options.expires,\n      type: typeof value,\n      byteSize: 0\n    };\n    ret.byteSize = getByteLength(JSON.stringify(ret)); // for accurate size\n\n    ret.byteSize = getByteLength(JSON.stringify(ret));\n    return ret;\n  };\n  /**\n   * set cache with customized configuration\n   * @param config - customized configuration\n   *\n   * @return - the current configuration\n   */\n\n\n  StorageCache.prototype.configure = function (config) {\n    if (!config) {\n      return this.config;\n    }\n\n    if (config.keyPrefix) {\n      logger.warn(\"Don't try to configure keyPrefix!\");\n    }\n\n    this.config = Object.assign({}, this.config, config, config.Cache);\n    this.checkConfig();\n    return this.config;\n  };\n\n  return StorageCache;\n}();\n\nexport default StorageCache;","map":{"version":3,"sources":["../src/StorageCache.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { getCurrTime, getByteLength, defaultConfig, isInteger } from './Utils';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('StorageCache');\n/**\n * Initialization of the cache\n *\n */\nvar StorageCache = /** @class */ (function () {\n    /**\n     * Initialize the cache\n     * @param config - the configuration of the cache\n     */\n    function StorageCache(config) {\n        this.config = Object.assign({}, config);\n        this.cacheCurSizeKey = this.config.keyPrefix + 'CurSize';\n        this.checkConfig();\n    }\n    StorageCache.prototype.getModuleName = function () {\n        return 'Cache';\n    };\n    StorageCache.prototype.checkConfig = function () {\n        // check configuration\n        if (!isInteger(this.config.capacityInBytes)) {\n            logger.error('Invalid parameter: capacityInBytes. It should be an Integer. Setting back to default.');\n            this.config.capacityInBytes = defaultConfig.capacityInBytes;\n        }\n        if (!isInteger(this.config.itemMaxSize)) {\n            logger.error('Invalid parameter: itemMaxSize. It should be an Integer. Setting back to default.');\n            this.config.itemMaxSize = defaultConfig.itemMaxSize;\n        }\n        if (!isInteger(this.config.defaultTTL)) {\n            logger.error('Invalid parameter: defaultTTL. It should be an Integer. Setting back to default.');\n            this.config.defaultTTL = defaultConfig.defaultTTL;\n        }\n        if (!isInteger(this.config.defaultPriority)) {\n            logger.error('Invalid parameter: defaultPriority. It should be an Integer. Setting back to default.');\n            this.config.defaultPriority = defaultConfig.defaultPriority;\n        }\n        if (this.config.itemMaxSize > this.config.capacityInBytes) {\n            logger.error('Invalid parameter: itemMaxSize. It should be smaller than capacityInBytes. Setting back to default.');\n            this.config.itemMaxSize = defaultConfig.itemMaxSize;\n        }\n        if (this.config.defaultPriority > 5 || this.config.defaultPriority < 1) {\n            logger.error('Invalid parameter: defaultPriority. It should be between 1 and 5. Setting back to default.');\n            this.config.defaultPriority = defaultConfig.defaultPriority;\n        }\n        if (Number(this.config.warningThreshold) > 1 ||\n            Number(this.config.warningThreshold) < 0) {\n            logger.error('Invalid parameter: warningThreshold. It should be between 0 and 1. Setting back to default.');\n            this.config.warningThreshold = defaultConfig.warningThreshold;\n        }\n        // set 5MB limit\n        var cacheLimit = 5 * 1024 * 1024;\n        if (this.config.capacityInBytes > cacheLimit) {\n            logger.error('Cache Capacity should be less than 5MB. Setting back to default. Setting back to default.');\n            this.config.capacityInBytes = defaultConfig.capacityInBytes;\n        }\n    };\n    /**\n     * produce a JSON object with meta-data and data value\n     * @param value - the value of the item\n     * @param options - optional, the specified meta-data\n     *\n     * @return - the item which has the meta-data and the value\n     */\n    StorageCache.prototype.fillCacheItem = function (key, value, options) {\n        var ret = {\n            key: key,\n            data: value,\n            timestamp: getCurrTime(),\n            visitedTime: getCurrTime(),\n            priority: options.priority,\n            expires: options.expires,\n            type: typeof value,\n            byteSize: 0,\n        };\n        ret.byteSize = getByteLength(JSON.stringify(ret));\n        // for accurate size\n        ret.byteSize = getByteLength(JSON.stringify(ret));\n        return ret;\n    };\n    /**\n     * set cache with customized configuration\n     * @param config - customized configuration\n     *\n     * @return - the current configuration\n     */\n    StorageCache.prototype.configure = function (config) {\n        if (!config) {\n            return this.config;\n        }\n        if (config.keyPrefix) {\n            logger.warn(\"Don't try to configure keyPrefix!\");\n        }\n        this.config = Object.assign({}, this.config, config, config.Cache);\n        this.checkConfig();\n        return this.config;\n    };\n    return StorageCache;\n}());\nexport default StorageCache;\n//# sourceMappingURL=StorageCache.js.map"]},"metadata":{},"sourceType":"module"}