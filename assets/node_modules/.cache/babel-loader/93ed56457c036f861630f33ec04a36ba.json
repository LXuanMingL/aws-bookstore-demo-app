{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nimport UserAgent from './UserAgent';\n/** @class */\n\nvar Client = function () {\n  /**\n   * Constructs a new AWS Cognito Identity Provider client object\n   * @param {string} region AWS region\n   * @param {string} endpoint endpoint\n   */\n  function Client(region, endpoint) {\n    _classCallCheck(this, Client);\n\n    this.endpoint = endpoint || 'https://cognito-idp.' + region + '.amazonaws.com/';\n    this.userAgent = UserAgent.prototype.userAgent || 'aws-amplify/0.1.x js';\n  }\n  /**\n   * Makes an unauthenticated request on AWS Cognito Identity Provider API\n   * using fetch\n   * @param {string} operation API operation\n   * @param {object} params Input parameters\n   * @param {function} callback Callback called when a response is returned\n   * @returns {void}\n   */\n\n\n  Client.prototype.request = function request(operation, params, callback) {\n    var headers = {\n      'Content-Type': 'application/x-amz-json-1.1',\n      'X-Amz-Target': 'AWSCognitoIdentityProviderService.' + operation,\n      'X-Amz-User-Agent': this.userAgent\n    };\n    var options = {\n      headers: headers,\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      body: JSON.stringify(params)\n    };\n    var response = void 0;\n    var responseJsonData = void 0;\n    fetch(this.endpoint, options).then(function (resp) {\n      response = resp;\n      return resp;\n    }, function (err) {\n      // If error happens here, the request failed\n      // if it is TypeError throw network error\n      if (err instanceof TypeError) {\n        throw new Error('Network error');\n      }\n\n      throw err;\n    }).then(function (resp) {\n      return resp.json().catch(function () {\n        return {};\n      });\n    }).then(function (data) {\n      // return parsed body stream\n      if (response.ok) return callback(null, data);\n      responseJsonData = data; // Taken from aws-sdk-js/lib/protocol/json.js\n      // eslint-disable-next-line no-underscore-dangle\n\n      var code = (data.__type || data.code).split('#').pop();\n      var error = {\n        code: code,\n        name: code,\n        message: data.message || data.Message || null\n      };\n      return callback(error);\n    }).catch(function (err) {\n      // first check if we have a service error\n      if (response && response.headers && response.headers.get('x-amzn-errortype')) {\n        try {\n          var code = response.headers.get('x-amzn-errortype').split(':')[0];\n          var error = {\n            code: code,\n            name: code,\n            statusCode: response.status,\n            message: response.status ? response.status.toString() : null\n          };\n          return callback(error);\n        } catch (ex) {\n          return callback(err);\n        } // otherwise check if error is Network error\n\n      } else if (err instanceof Error && err.message === 'Network error') {\n        var _error = {\n          code: 'NetworkError',\n          name: err.name,\n          message: err.message\n        };\n        return callback(_error);\n      } else {\n        return callback(err);\n      }\n    });\n  };\n\n  return Client;\n}();\n\nexport default Client;","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","UserAgent","Client","region","endpoint","userAgent","prototype","request","operation","params","callback","headers","options","method","mode","cache","body","JSON","stringify","response","responseJsonData","fetch","then","resp","err","Error","json","catch","data","ok","code","__type","split","pop","error","name","message","Message","get","statusCode","status","toString","ex","_error"],"sources":["/home/xl355/341/aws-bookstore-demo-app/assets/node_modules/amazon-cognito-identity-js/es/Client.js"],"sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport UserAgent from './UserAgent';\n/** @class */\n\nvar Client = function () {\n\t/**\n  * Constructs a new AWS Cognito Identity Provider client object\n  * @param {string} region AWS region\n  * @param {string} endpoint endpoint\n  */\n\tfunction Client(region, endpoint) {\n\t\t_classCallCheck(this, Client);\n\n\t\tthis.endpoint = endpoint || 'https://cognito-idp.' + region + '.amazonaws.com/';\n\t\tthis.userAgent = UserAgent.prototype.userAgent || 'aws-amplify/0.1.x js';\n\t}\n\n\t/**\n  * Makes an unauthenticated request on AWS Cognito Identity Provider API\n  * using fetch\n  * @param {string} operation API operation\n  * @param {object} params Input parameters\n  * @param {function} callback Callback called when a response is returned\n  * @returns {void}\n  */\n\n\n\tClient.prototype.request = function request(operation, params, callback) {\n\t\tvar headers = {\n\t\t\t'Content-Type': 'application/x-amz-json-1.1',\n\t\t\t'X-Amz-Target': 'AWSCognitoIdentityProviderService.' + operation,\n\t\t\t'X-Amz-User-Agent': this.userAgent\n\t\t};\n\n\t\tvar options = {\n\t\t\theaders: headers,\n\t\t\tmethod: 'POST',\n\t\t\tmode: 'cors',\n\t\t\tcache: 'no-cache',\n\t\t\tbody: JSON.stringify(params)\n\t\t};\n\n\t\tvar response = void 0;\n\t\tvar responseJsonData = void 0;\n\n\t\tfetch(this.endpoint, options).then(function (resp) {\n\t\t\tresponse = resp;\n\t\t\treturn resp;\n\t\t}, function (err) {\n\t\t\t// If error happens here, the request failed\n\t\t\t// if it is TypeError throw network error\n\t\t\tif (err instanceof TypeError) {\n\t\t\t\tthrow new Error('Network error');\n\t\t\t}\n\t\t\tthrow err;\n\t\t}).then(function (resp) {\n\t\t\treturn resp.json().catch(function () {\n\t\t\t\treturn {};\n\t\t\t});\n\t\t}).then(function (data) {\n\t\t\t// return parsed body stream\n\t\t\tif (response.ok) return callback(null, data);\n\t\t\tresponseJsonData = data;\n\n\t\t\t// Taken from aws-sdk-js/lib/protocol/json.js\n\t\t\t// eslint-disable-next-line no-underscore-dangle\n\t\t\tvar code = (data.__type || data.code).split('#').pop();\n\t\t\tvar error = {\n\t\t\t\tcode: code,\n\t\t\t\tname: code,\n\t\t\t\tmessage: data.message || data.Message || null\n\t\t\t};\n\t\t\treturn callback(error);\n\t\t}).catch(function (err) {\n\t\t\t// first check if we have a service error\n\t\t\tif (response && response.headers && response.headers.get('x-amzn-errortype')) {\n\t\t\t\ttry {\n\t\t\t\t\tvar code = response.headers.get('x-amzn-errortype').split(':')[0];\n\t\t\t\t\tvar error = {\n\t\t\t\t\t\tcode: code,\n\t\t\t\t\t\tname: code,\n\t\t\t\t\t\tstatusCode: response.status,\n\t\t\t\t\t\tmessage: response.status ? response.status.toString() : null\n\t\t\t\t\t};\n\t\t\t\t\treturn callback(error);\n\t\t\t\t} catch (ex) {\n\t\t\t\t\treturn callback(err);\n\t\t\t\t}\n\t\t\t\t// otherwise check if error is Network error\n\t\t\t} else if (err instanceof Error && err.message === 'Network error') {\n\t\t\t\tvar _error = {\n\t\t\t\t\tcode: 'NetworkError',\n\t\t\t\t\tname: err.name,\n\t\t\t\t\tmessage: err.message\n\t\t\t\t};\n\t\t\t\treturn callback(_error);\n\t\t\t} else {\n\t\t\t\treturn callback(err);\n\t\t\t}\n\t\t});\n\t};\n\n\treturn Client;\n}();\n\nexport default Client;"],"mappings":"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"},"metadata":{},"sourceType":"module"}