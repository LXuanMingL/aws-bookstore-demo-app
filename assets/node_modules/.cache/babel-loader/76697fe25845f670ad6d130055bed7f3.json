{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\nimport { forEach, isCollection } from 'iterall';\nimport inspect from '../jsutils/inspect';\nimport isInvalid from '../jsutils/isInvalid';\nimport orList from '../jsutils/orList';\nimport suggestionList from '../jsutils/suggestionList';\nimport { GraphQLError } from '../error/GraphQLError';\nimport { isScalarType, isEnumType, isInputObjectType, isListType, isNonNullType } from '../type/definition';\n/**\n * Coerces a JavaScript value given a GraphQL Type.\n *\n * Returns either a value which is valid for the provided type or a list of\n * encountered coercion errors.\n *\n */\n\nexport function coerceValue(value, type, blameNode, path) {\n  // A value must be provided if the type is non-null.\n  if (isNonNullType(type)) {\n    if (value == null) {\n      return ofErrors([coercionError(\"Expected non-nullable type \".concat(inspect(type), \" not to be null\"), blameNode, path)]);\n    }\n\n    return coerceValue(value, type.ofType, blameNode, path);\n  }\n\n  if (value == null) {\n    // Explicitly return the value null.\n    return ofValue(null);\n  }\n\n  if (isScalarType(type)) {\n    // Scalars determine if a value is valid via parseValue(), which can\n    // throw to indicate failure. If it throws, maintain a reference to\n    // the original error.\n    try {\n      var parseResult = type.parseValue(value);\n\n      if (isInvalid(parseResult)) {\n        return ofErrors([coercionError(\"Expected type \".concat(type.name), blameNode, path)]);\n      }\n\n      return ofValue(parseResult);\n    } catch (error) {\n      return ofErrors([coercionError(\"Expected type \".concat(type.name), blameNode, path, error.message, error)]);\n    }\n  }\n\n  if (isEnumType(type)) {\n    if (typeof value === 'string') {\n      var enumValue = type.getValue(value);\n\n      if (enumValue) {\n        return ofValue(enumValue.value);\n      }\n    }\n\n    var suggestions = suggestionList(String(value), type.getValues().map(function (enumValue) {\n      return enumValue.name;\n    }));\n    var didYouMean = suggestions.length !== 0 ? \"did you mean \".concat(orList(suggestions), \"?\") : undefined;\n    return ofErrors([coercionError(\"Expected type \".concat(type.name), blameNode, path, didYouMean)]);\n  }\n\n  if (isListType(type)) {\n    var itemType = type.ofType;\n\n    if (isCollection(value)) {\n      var errors;\n      var coercedValue = [];\n      forEach(value, function (itemValue, index) {\n        var coercedItem = coerceValue(itemValue, itemType, blameNode, atPath(path, index));\n\n        if (coercedItem.errors) {\n          errors = add(errors, coercedItem.errors);\n        } else if (!errors) {\n          coercedValue.push(coercedItem.value);\n        }\n      });\n      return errors ? ofErrors(errors) : ofValue(coercedValue);\n    } // Lists accept a non-list value as a list of one.\n\n\n    var coercedItem = coerceValue(value, itemType, blameNode);\n    return coercedItem.errors ? coercedItem : ofValue([coercedItem.value]);\n  }\n\n  if (isInputObjectType(type)) {\n    if (_typeof(value) !== 'object') {\n      return ofErrors([coercionError(\"Expected type \".concat(type.name, \" to be an object\"), blameNode, path)]);\n    }\n\n    var _errors;\n\n    var _coercedValue = {};\n    var fields = type.getFields(); // Ensure every defined field is valid.\n\n    for (var fieldName in fields) {\n      if (hasOwnProperty.call(fields, fieldName)) {\n        var field = fields[fieldName];\n        var fieldValue = value[fieldName];\n\n        if (isInvalid(fieldValue)) {\n          if (!isInvalid(field.defaultValue)) {\n            _coercedValue[fieldName] = field.defaultValue;\n          } else if (isNonNullType(field.type)) {\n            _errors = add(_errors, coercionError(\"Field \".concat(printPath(atPath(path, fieldName)), \" of required \") + \"type \".concat(inspect(field.type), \" was not provided\"), blameNode));\n          }\n        } else {\n          var coercedField = coerceValue(fieldValue, field.type, blameNode, atPath(path, fieldName));\n\n          if (coercedField.errors) {\n            _errors = add(_errors, coercedField.errors);\n          } else if (!_errors) {\n            _coercedValue[fieldName] = coercedField.value;\n          }\n        }\n      }\n    } // Ensure every provided field is defined.\n\n\n    for (var _fieldName in value) {\n      if (hasOwnProperty.call(value, _fieldName)) {\n        if (!fields[_fieldName]) {\n          var _suggestions = suggestionList(_fieldName, Object.keys(fields));\n\n          var _didYouMean = _suggestions.length !== 0 ? \"did you mean \".concat(orList(_suggestions), \"?\") : undefined;\n\n          _errors = add(_errors, coercionError(\"Field \\\"\".concat(_fieldName, \"\\\" is not defined by type \").concat(type.name), blameNode, path, _didYouMean));\n        }\n      }\n    }\n\n    return _errors ? ofErrors(_errors) : ofValue(_coercedValue);\n  }\n  /* istanbul ignore next */\n\n\n  throw new Error(\"Unexpected type: \".concat(type, \".\"));\n}\n\nfunction ofValue(value) {\n  return {\n    errors: undefined,\n    value: value\n  };\n}\n\nfunction ofErrors(errors) {\n  return {\n    errors: errors,\n    value: undefined\n  };\n}\n\nfunction add(errors, moreErrors) {\n  return (errors || []).concat(moreErrors);\n}\n\nfunction atPath(prev, key) {\n  return {\n    prev: prev,\n    key: key\n  };\n}\n\nfunction coercionError(message, blameNode, path, subMessage, originalError) {\n  var pathStr = printPath(path); // Return a GraphQLError instance\n\n  return new GraphQLError(message + (pathStr ? ' at ' + pathStr : '') + (subMessage ? '; ' + subMessage : '.'), blameNode, undefined, undefined, undefined, originalError);\n} // Build a string describing the path into the value where the error was found\n\n\nfunction printPath(path) {\n  var pathStr = '';\n  var currentPath = path;\n\n  while (currentPath) {\n    pathStr = (typeof currentPath.key === 'string' ? '.' + currentPath.key : '[' + String(currentPath.key) + ']') + pathStr;\n    currentPath = currentPath.prev;\n  }\n\n  return pathStr ? 'value' + pathStr : '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","forEach","isCollection","inspect","isInvalid","orList","suggestionList","GraphQLError","isScalarType","isEnumType","isInputObjectType","isListType","isNonNullType","coerceValue","value","type","blameNode","path","ofErrors","coercionError","concat","ofType","ofValue","parseResult","parseValue","name","error","message","enumValue","getValue","suggestions","String","getValues","map","didYouMean","length","undefined","itemType","errors","coercedValue","itemValue","index","coercedItem","atPath","add","push","_errors","_coercedValue","fields","getFields","fieldName","hasOwnProperty","call","field","fieldValue","defaultValue","printPath","coercedField","_fieldName","_suggestions","Object","keys","_didYouMean","Error","moreErrors","prev","key","subMessage","originalError","pathStr","currentPath"],"sources":["/home/xl355/341/aws-bookstore-demo-app/assets/node_modules/@aws-amplify/api/node_modules/graphql/utilities/coerceValue.mjs"],"sourcesContent":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\nimport { forEach, isCollection } from 'iterall';\nimport inspect from '../jsutils/inspect';\nimport isInvalid from '../jsutils/isInvalid';\nimport orList from '../jsutils/orList';\nimport suggestionList from '../jsutils/suggestionList';\nimport { GraphQLError } from '../error/GraphQLError';\nimport { isScalarType, isEnumType, isInputObjectType, isListType, isNonNullType } from '../type/definition';\n\n/**\n * Coerces a JavaScript value given a GraphQL Type.\n *\n * Returns either a value which is valid for the provided type or a list of\n * encountered coercion errors.\n *\n */\nexport function coerceValue(value, type, blameNode, path) {\n  // A value must be provided if the type is non-null.\n  if (isNonNullType(type)) {\n    if (value == null) {\n      return ofErrors([coercionError(\"Expected non-nullable type \".concat(inspect(type), \" not to be null\"), blameNode, path)]);\n    }\n\n    return coerceValue(value, type.ofType, blameNode, path);\n  }\n\n  if (value == null) {\n    // Explicitly return the value null.\n    return ofValue(null);\n  }\n\n  if (isScalarType(type)) {\n    // Scalars determine if a value is valid via parseValue(), which can\n    // throw to indicate failure. If it throws, maintain a reference to\n    // the original error.\n    try {\n      var parseResult = type.parseValue(value);\n\n      if (isInvalid(parseResult)) {\n        return ofErrors([coercionError(\"Expected type \".concat(type.name), blameNode, path)]);\n      }\n\n      return ofValue(parseResult);\n    } catch (error) {\n      return ofErrors([coercionError(\"Expected type \".concat(type.name), blameNode, path, error.message, error)]);\n    }\n  }\n\n  if (isEnumType(type)) {\n    if (typeof value === 'string') {\n      var enumValue = type.getValue(value);\n\n      if (enumValue) {\n        return ofValue(enumValue.value);\n      }\n    }\n\n    var suggestions = suggestionList(String(value), type.getValues().map(function (enumValue) {\n      return enumValue.name;\n    }));\n    var didYouMean = suggestions.length !== 0 ? \"did you mean \".concat(orList(suggestions), \"?\") : undefined;\n    return ofErrors([coercionError(\"Expected type \".concat(type.name), blameNode, path, didYouMean)]);\n  }\n\n  if (isListType(type)) {\n    var itemType = type.ofType;\n\n    if (isCollection(value)) {\n      var errors;\n      var coercedValue = [];\n      forEach(value, function (itemValue, index) {\n        var coercedItem = coerceValue(itemValue, itemType, blameNode, atPath(path, index));\n\n        if (coercedItem.errors) {\n          errors = add(errors, coercedItem.errors);\n        } else if (!errors) {\n          coercedValue.push(coercedItem.value);\n        }\n      });\n      return errors ? ofErrors(errors) : ofValue(coercedValue);\n    } // Lists accept a non-list value as a list of one.\n\n\n    var coercedItem = coerceValue(value, itemType, blameNode);\n    return coercedItem.errors ? coercedItem : ofValue([coercedItem.value]);\n  }\n\n  if (isInputObjectType(type)) {\n    if (_typeof(value) !== 'object') {\n      return ofErrors([coercionError(\"Expected type \".concat(type.name, \" to be an object\"), blameNode, path)]);\n    }\n\n    var _errors;\n\n    var _coercedValue = {};\n    var fields = type.getFields(); // Ensure every defined field is valid.\n\n    for (var fieldName in fields) {\n      if (hasOwnProperty.call(fields, fieldName)) {\n        var field = fields[fieldName];\n        var fieldValue = value[fieldName];\n\n        if (isInvalid(fieldValue)) {\n          if (!isInvalid(field.defaultValue)) {\n            _coercedValue[fieldName] = field.defaultValue;\n          } else if (isNonNullType(field.type)) {\n            _errors = add(_errors, coercionError(\"Field \".concat(printPath(atPath(path, fieldName)), \" of required \") + \"type \".concat(inspect(field.type), \" was not provided\"), blameNode));\n          }\n        } else {\n          var coercedField = coerceValue(fieldValue, field.type, blameNode, atPath(path, fieldName));\n\n          if (coercedField.errors) {\n            _errors = add(_errors, coercedField.errors);\n          } else if (!_errors) {\n            _coercedValue[fieldName] = coercedField.value;\n          }\n        }\n      }\n    } // Ensure every provided field is defined.\n\n\n    for (var _fieldName in value) {\n      if (hasOwnProperty.call(value, _fieldName)) {\n        if (!fields[_fieldName]) {\n          var _suggestions = suggestionList(_fieldName, Object.keys(fields));\n\n          var _didYouMean = _suggestions.length !== 0 ? \"did you mean \".concat(orList(_suggestions), \"?\") : undefined;\n\n          _errors = add(_errors, coercionError(\"Field \\\"\".concat(_fieldName, \"\\\" is not defined by type \").concat(type.name), blameNode, path, _didYouMean));\n        }\n      }\n    }\n\n    return _errors ? ofErrors(_errors) : ofValue(_coercedValue);\n  }\n  /* istanbul ignore next */\n\n\n  throw new Error(\"Unexpected type: \".concat(type, \".\"));\n}\n\nfunction ofValue(value) {\n  return {\n    errors: undefined,\n    value: value\n  };\n}\n\nfunction ofErrors(errors) {\n  return {\n    errors: errors,\n    value: undefined\n  };\n}\n\nfunction add(errors, moreErrors) {\n  return (errors || []).concat(moreErrors);\n}\n\nfunction atPath(prev, key) {\n  return {\n    prev: prev,\n    key: key\n  };\n}\n\nfunction coercionError(message, blameNode, path, subMessage, originalError) {\n  var pathStr = printPath(path); // Return a GraphQLError instance\n\n  return new GraphQLError(message + (pathStr ? ' at ' + pathStr : '') + (subMessage ? '; ' + subMessage : '.'), blameNode, undefined, undefined, undefined, originalError);\n} // Build a string describing the path into the value where the error was found\n\n\nfunction printPath(path) {\n  var pathStr = '';\n  var currentPath = path;\n\n  while (currentPath) {\n    pathStr = (typeof currentPath.key === 'string' ? '.' + currentPath.key : '[' + String(currentPath.key) + ']') + pathStr;\n    currentPath = currentPath.prev;\n  }\n\n  return pathStr ? 'value' + pathStr : '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;"],"mappings":"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"},"metadata":{},"sourceType":"module"}