{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n/*\n * Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\n\nimport { ConsoleLogger as Logger, Signer, Credentials, Constants } from '@aws-amplify/core';\nimport { AbstractXRProvider } from './XRProvider';\nimport { XRNoSceneConfiguredError, XRSceneNotFoundError, XRSceneNotLoadedError, XRNoDomElement, XRSceneLoadFailure } from '../Errors';\nvar SUMERIAN_SERVICE_NAME = 'sumerian';\nvar logger = new Logger('SumerianProvider');\n\nvar SumerianProvider =\n/** @class */\nfunction (_super) {\n  __extends(SumerianProvider, _super);\n\n  function SumerianProvider(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    return _super.call(this, options) || this;\n  }\n\n  SumerianProvider.prototype.getProviderName = function () {\n    return 'SumerianProvider';\n  };\n\n  SumerianProvider.prototype.loadScript = function (url) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , new Promise(function (resolve, reject) {\n          var scriptElement = document.createElement('script');\n          scriptElement.src = url;\n          scriptElement.addEventListener('load', function (event) {\n            resolve();\n          });\n          scriptElement.addEventListener('error', function (event) {\n            reject(new Error(\"Failed to load script: \" + url));\n          });\n          document.head.appendChild(scriptElement);\n        })];\n      });\n    });\n  };\n\n  SumerianProvider.prototype.loadScene = function (sceneName, domElementId, sceneOptions) {\n    return __awaiter(this, void 0, void 0, function () {\n      var errorMsg, errorMsg, element, errorMsg, scene, errorMsg, sceneUrl, sceneId, sceneRegion, errorMsg, awsSDKConfigOverride, fetchOptions, url, credentials, accessInfo, serviceInfo, request, e_1, apiResponse, apiResponseJson, sceneBundleData, sceneBundle, sceneBundleJson, error_1, progressCallback, publishParamOverrides, sceneLoadParams, sceneController, _i, _a, warning;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (!sceneName) {\n              errorMsg = 'No scene name passed into loadScene';\n              logger.error(errorMsg);\n              throw new XRSceneLoadFailure(errorMsg);\n            }\n\n            if (!domElementId) {\n              errorMsg = 'No dom element id passed into loadScene';\n              logger.error(errorMsg);\n              throw new XRNoDomElement(errorMsg);\n            }\n\n            element = document.getElementById(domElementId);\n\n            if (!element) {\n              errorMsg = \"DOM element id, \" + domElementId + \" not found\";\n              logger.error(errorMsg);\n              throw new XRNoDomElement(errorMsg);\n            }\n\n            scene = this.getScene(sceneName);\n\n            if (!scene.sceneConfig) {\n              errorMsg = \"No scene config configured for scene: \" + sceneName;\n              logger.error(errorMsg);\n              throw new XRSceneLoadFailure(errorMsg);\n            }\n\n            sceneUrl = scene.sceneConfig.url;\n            sceneId = scene.sceneConfig.sceneId;\n\n            if (scene.sceneConfig.hasOwnProperty('region')) {\n              // Use the scene region on the Sumerian scene configuration\n              sceneRegion = scene.sceneConfig.region;\n            } else if (this.options.hasOwnProperty('region')) {\n              // Use the scene region on the XR category configuration\n              sceneRegion = this.options.region;\n            } else {\n              errorMsg = \"No region configured for scene: \" + sceneName;\n              logger.error(errorMsg);\n              throw new XRSceneLoadFailure(errorMsg);\n            }\n\n            awsSDKConfigOverride = {\n              region: sceneRegion,\n              // This is passed to the AWS clients created in\n              // Sumerian's AwsSystem\n              // This helps other services(like Lex and Polly) to track\n              // traffic coming from Sumerian scenes embedded with Amplify\n              customUserAgent: Constants.userAgent + \"-SumerianScene\"\n            };\n            fetchOptions = {\n              headers: {\n                // This sets the AWS user agent string\n                // So the Sumerian service knows this request is\n                // from Amplify\n                'X-Amz-User-Agent': Constants.userAgent\n              }\n            };\n            url = sceneUrl;\n            _b.label = 1;\n\n          case 1:\n            _b.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , Credentials.get()];\n\n          case 2:\n            credentials = _b.sent();\n            awsSDKConfigOverride['credentials'] = credentials;\n            accessInfo = {\n              secret_key: credentials.secretAccessKey,\n              access_key: credentials.accessKeyId,\n              session_token: credentials.sessionToken\n            };\n            serviceInfo = {\n              region: sceneRegion,\n              service: SUMERIAN_SERVICE_NAME\n            };\n            request = Signer.sign({\n              method: 'GET',\n              url: sceneUrl\n            }, accessInfo, serviceInfo);\n            fetchOptions.headers = __assign(__assign({}, fetchOptions.headers), request.headers);\n            url = request.url;\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            e_1 = _b.sent();\n            logger.debug('No credentials available, the request will be unsigned');\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            return [4\n            /*yield*/\n            , fetch(url, fetchOptions)];\n\n          case 5:\n            apiResponse = _b.sent();\n            return [4\n            /*yield*/\n            , apiResponse.json()];\n\n          case 6:\n            apiResponseJson = _b.sent();\n\n            if (apiResponse.status === 403) {\n              if (apiResponseJson.message) {\n                logger.error(\"Failure to authenticate user: \" + apiResponseJson.message);\n                throw new XRSceneLoadFailure(\"Failure to authenticate user: \" + apiResponseJson.message);\n              } else {\n                logger.error(\"Failure to authenticate user\");\n                throw new XRSceneLoadFailure(\"Failure to authenticate user\");\n              }\n            }\n\n            sceneBundleData = apiResponseJson.bundleData[sceneId];\n            return [4\n            /*yield*/\n            , fetch(sceneBundleData.url, {\n              headers: sceneBundleData.headers\n            })];\n\n          case 7:\n            sceneBundle = _b.sent();\n            return [4\n            /*yield*/\n            , sceneBundle.json()];\n\n          case 8:\n            sceneBundleJson = _b.sent();\n            _b.label = 9;\n\n          case 9:\n            _b.trys.push([9, 11,, 12]); // Load the Sumerian bootstrapper script into the DOM\n\n\n            return [4\n            /*yield*/\n            , this.loadScript(sceneBundleJson[sceneId].bootstrapperUrl)];\n\n          case 10:\n            // Load the Sumerian bootstrapper script into the DOM\n            _b.sent();\n\n            return [3\n            /*break*/\n            , 12];\n\n          case 11:\n            error_1 = _b.sent();\n            logger.error(error_1);\n            throw new XRSceneLoadFailure(error_1);\n\n          case 12:\n            progressCallback = sceneOptions.progressCallback ? sceneOptions.progressCallback : undefined;\n            publishParamOverrides = scene.publishParamOverrides ? scene.publishParamOverrides : undefined;\n            sceneLoadParams = {\n              element: element,\n              sceneId: sceneId,\n              sceneBundle: sceneBundleJson,\n              apiResponse: apiResponseJson,\n              progressCallback: progressCallback,\n              publishParamOverrides: publishParamOverrides,\n              awsSDKConfigOverride: awsSDKConfigOverride\n            };\n            return [4\n            /*yield*/\n            , window.SumerianBootstrapper.loadScene(sceneLoadParams)];\n\n          case 13:\n            sceneController = _b.sent();\n            scene.sceneController = sceneController;\n            scene.isLoaded = true; // Log scene warnings\n\n            for (_i = 0, _a = sceneController.sceneLoadWarnings; _i < _a.length; _i++) {\n              warning = _a[_i];\n              logger.warn(\"loadScene warning: \" + warning);\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  SumerianProvider.prototype.isSceneLoaded = function (sceneName) {\n    var scene = this.getScene(sceneName);\n    return scene.isLoaded || false;\n  };\n\n  SumerianProvider.prototype.getScene = function (sceneName) {\n    if (!this.options.scenes) {\n      var errorMsg = 'No scenes were defined in the configuration';\n      logger.error(errorMsg);\n      throw new XRNoSceneConfiguredError(errorMsg);\n    }\n\n    if (!sceneName) {\n      var errorMsg = 'No scene name was passed';\n      logger.error(errorMsg);\n      throw new XRSceneNotFoundError(errorMsg);\n    }\n\n    if (!this.options.scenes[sceneName]) {\n      var errorMsg = \"Scene '\" + sceneName + \"' is not configured\";\n      logger.error(errorMsg);\n      throw new XRSceneNotFoundError(errorMsg);\n    }\n\n    return this.options.scenes[sceneName];\n  };\n\n  SumerianProvider.prototype.getSceneController = function (sceneName) {\n    if (!this.options.scenes) {\n      var errorMsg = 'No scenes were defined in the configuration';\n      logger.error(errorMsg);\n      throw new XRNoSceneConfiguredError(errorMsg);\n    }\n\n    var scene = this.options.scenes[sceneName];\n\n    if (!scene) {\n      var errorMsg = \"Scene '\" + sceneName + \"' is not configured\";\n      logger.error(errorMsg);\n      throw new XRSceneNotFoundError(errorMsg);\n    }\n\n    var sceneController = scene.sceneController;\n\n    if (!sceneController) {\n      var errorMsg = \"Scene controller for '\" + sceneName + \"' has not been loaded\";\n      logger.error(errorMsg);\n      throw new XRSceneNotLoadedError(errorMsg);\n    }\n\n    return sceneController;\n  };\n\n  SumerianProvider.prototype.isVRCapable = function (sceneName) {\n    var sceneController = this.getSceneController(sceneName);\n    return sceneController.vrCapable;\n  };\n\n  SumerianProvider.prototype.isVRPresentationActive = function (sceneName) {\n    var sceneController = this.getSceneController(sceneName);\n    return sceneController.vrPresentationActive;\n  };\n\n  SumerianProvider.prototype.start = function (sceneName) {\n    var sceneController = this.getSceneController(sceneName);\n    sceneController.start();\n  };\n\n  SumerianProvider.prototype.enterVR = function (sceneName) {\n    var sceneController = this.getSceneController(sceneName);\n    sceneController.enterVR();\n  };\n\n  SumerianProvider.prototype.exitVR = function (sceneName) {\n    var sceneController = this.getSceneController(sceneName);\n    sceneController.exitVR();\n  };\n\n  SumerianProvider.prototype.isMuted = function (sceneName) {\n    var sceneController = this.getSceneController(sceneName);\n    return sceneController.muted;\n  };\n\n  SumerianProvider.prototype.setMuted = function (sceneName, muted) {\n    var sceneController = this.getSceneController(sceneName);\n    sceneController.muted = muted;\n  };\n\n  SumerianProvider.prototype.onSceneEvent = function (sceneName, eventName, eventHandler) {\n    var sceneController = this.getSceneController(sceneName);\n    sceneController.on(eventName, eventHandler);\n  };\n\n  SumerianProvider.prototype.enableAudio = function (sceneName) {\n    var sceneController = this.getSceneController(sceneName);\n    sceneController.enableAudio();\n  };\n\n  return SumerianProvider;\n}(AbstractXRProvider);\n\nexport { SumerianProvider };","map":{"version":3,"sources":["../../src/Providers/SumerianProvider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n/*\n * Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { ConsoleLogger as Logger, Signer, Credentials, Constants, } from '@aws-amplify/core';\nimport { AbstractXRProvider } from './XRProvider';\nimport { XRNoSceneConfiguredError, XRSceneNotFoundError, XRSceneNotLoadedError, XRNoDomElement, XRSceneLoadFailure, } from '../Errors';\nvar SUMERIAN_SERVICE_NAME = 'sumerian';\nvar logger = new Logger('SumerianProvider');\nvar SumerianProvider = /** @class */ (function (_super) {\n    __extends(SumerianProvider, _super);\n    function SumerianProvider(options) {\n        if (options === void 0) { options = {}; }\n        return _super.call(this, options) || this;\n    }\n    SumerianProvider.prototype.getProviderName = function () {\n        return 'SumerianProvider';\n    };\n    SumerianProvider.prototype.loadScript = function (url) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (resolve, reject) {\n                        var scriptElement = document.createElement('script');\n                        scriptElement.src = url;\n                        scriptElement.addEventListener('load', function (event) {\n                            resolve();\n                        });\n                        scriptElement.addEventListener('error', function (event) {\n                            reject(new Error(\"Failed to load script: \" + url));\n                        });\n                        document.head.appendChild(scriptElement);\n                    })];\n            });\n        });\n    };\n    SumerianProvider.prototype.loadScene = function (sceneName, domElementId, sceneOptions) {\n        return __awaiter(this, void 0, void 0, function () {\n            var errorMsg, errorMsg, element, errorMsg, scene, errorMsg, sceneUrl, sceneId, sceneRegion, errorMsg, awsSDKConfigOverride, fetchOptions, url, credentials, accessInfo, serviceInfo, request, e_1, apiResponse, apiResponseJson, sceneBundleData, sceneBundle, sceneBundleJson, error_1, progressCallback, publishParamOverrides, sceneLoadParams, sceneController, _i, _a, warning;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!sceneName) {\n                            errorMsg = 'No scene name passed into loadScene';\n                            logger.error(errorMsg);\n                            throw new XRSceneLoadFailure(errorMsg);\n                        }\n                        if (!domElementId) {\n                            errorMsg = 'No dom element id passed into loadScene';\n                            logger.error(errorMsg);\n                            throw new XRNoDomElement(errorMsg);\n                        }\n                        element = document.getElementById(domElementId);\n                        if (!element) {\n                            errorMsg = \"DOM element id, \" + domElementId + \" not found\";\n                            logger.error(errorMsg);\n                            throw new XRNoDomElement(errorMsg);\n                        }\n                        scene = this.getScene(sceneName);\n                        if (!scene.sceneConfig) {\n                            errorMsg = \"No scene config configured for scene: \" + sceneName;\n                            logger.error(errorMsg);\n                            throw new XRSceneLoadFailure(errorMsg);\n                        }\n                        sceneUrl = scene.sceneConfig.url;\n                        sceneId = scene.sceneConfig.sceneId;\n                        if (scene.sceneConfig.hasOwnProperty('region')) {\n                            // Use the scene region on the Sumerian scene configuration\n                            sceneRegion = scene.sceneConfig.region;\n                        }\n                        else if (this.options.hasOwnProperty('region')) {\n                            // Use the scene region on the XR category configuration\n                            sceneRegion = this.options.region;\n                        }\n                        else {\n                            errorMsg = \"No region configured for scene: \" + sceneName;\n                            logger.error(errorMsg);\n                            throw new XRSceneLoadFailure(errorMsg);\n                        }\n                        awsSDKConfigOverride = {\n                            region: sceneRegion,\n                            // This is passed to the AWS clients created in\n                            // Sumerian's AwsSystem\n                            // This helps other services(like Lex and Polly) to track\n                            // traffic coming from Sumerian scenes embedded with Amplify\n                            customUserAgent: Constants.userAgent + \"-SumerianScene\",\n                        };\n                        fetchOptions = {\n                            headers: {\n                                // This sets the AWS user agent string\n                                // So the Sumerian service knows this request is\n                                // from Amplify\n                                'X-Amz-User-Agent': Constants.userAgent,\n                            },\n                        };\n                        url = sceneUrl;\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, Credentials.get()];\n                    case 2:\n                        credentials = _b.sent();\n                        awsSDKConfigOverride['credentials'] = credentials;\n                        accessInfo = {\n                            secret_key: credentials.secretAccessKey,\n                            access_key: credentials.accessKeyId,\n                            session_token: credentials.sessionToken,\n                        };\n                        serviceInfo = {\n                            region: sceneRegion,\n                            service: SUMERIAN_SERVICE_NAME,\n                        };\n                        request = Signer.sign({ method: 'GET', url: sceneUrl }, accessInfo, serviceInfo);\n                        fetchOptions.headers = __assign(__assign({}, fetchOptions.headers), request.headers);\n                        url = request.url;\n                        return [3 /*break*/, 4];\n                    case 3:\n                        e_1 = _b.sent();\n                        logger.debug('No credentials available, the request will be unsigned');\n                        return [3 /*break*/, 4];\n                    case 4: return [4 /*yield*/, fetch(url, fetchOptions)];\n                    case 5:\n                        apiResponse = _b.sent();\n                        return [4 /*yield*/, apiResponse.json()];\n                    case 6:\n                        apiResponseJson = _b.sent();\n                        if (apiResponse.status === 403) {\n                            if (apiResponseJson.message) {\n                                logger.error(\"Failure to authenticate user: \" + apiResponseJson.message);\n                                throw new XRSceneLoadFailure(\"Failure to authenticate user: \" + apiResponseJson.message);\n                            }\n                            else {\n                                logger.error(\"Failure to authenticate user\");\n                                throw new XRSceneLoadFailure(\"Failure to authenticate user\");\n                            }\n                        }\n                        sceneBundleData = apiResponseJson.bundleData[sceneId];\n                        return [4 /*yield*/, fetch(sceneBundleData.url, {\n                                headers: sceneBundleData.headers,\n                            })];\n                    case 7:\n                        sceneBundle = _b.sent();\n                        return [4 /*yield*/, sceneBundle.json()];\n                    case 8:\n                        sceneBundleJson = _b.sent();\n                        _b.label = 9;\n                    case 9:\n                        _b.trys.push([9, 11, , 12]);\n                        // Load the Sumerian bootstrapper script into the DOM\n                        return [4 /*yield*/, this.loadScript(sceneBundleJson[sceneId].bootstrapperUrl)];\n                    case 10:\n                        // Load the Sumerian bootstrapper script into the DOM\n                        _b.sent();\n                        return [3 /*break*/, 12];\n                    case 11:\n                        error_1 = _b.sent();\n                        logger.error(error_1);\n                        throw new XRSceneLoadFailure(error_1);\n                    case 12:\n                        progressCallback = sceneOptions.progressCallback\n                            ? sceneOptions.progressCallback\n                            : undefined;\n                        publishParamOverrides = scene.publishParamOverrides\n                            ? scene.publishParamOverrides\n                            : undefined;\n                        sceneLoadParams = {\n                            element: element,\n                            sceneId: sceneId,\n                            sceneBundle: sceneBundleJson,\n                            apiResponse: apiResponseJson,\n                            progressCallback: progressCallback,\n                            publishParamOverrides: publishParamOverrides,\n                            awsSDKConfigOverride: awsSDKConfigOverride,\n                        };\n                        return [4 /*yield*/, window.SumerianBootstrapper.loadScene(sceneLoadParams)];\n                    case 13:\n                        sceneController = _b.sent();\n                        scene.sceneController = sceneController;\n                        scene.isLoaded = true;\n                        // Log scene warnings\n                        for (_i = 0, _a = sceneController.sceneLoadWarnings; _i < _a.length; _i++) {\n                            warning = _a[_i];\n                            logger.warn(\"loadScene warning: \" + warning);\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    SumerianProvider.prototype.isSceneLoaded = function (sceneName) {\n        var scene = this.getScene(sceneName);\n        return scene.isLoaded || false;\n    };\n    SumerianProvider.prototype.getScene = function (sceneName) {\n        if (!this.options.scenes) {\n            var errorMsg = 'No scenes were defined in the configuration';\n            logger.error(errorMsg);\n            throw new XRNoSceneConfiguredError(errorMsg);\n        }\n        if (!sceneName) {\n            var errorMsg = 'No scene name was passed';\n            logger.error(errorMsg);\n            throw new XRSceneNotFoundError(errorMsg);\n        }\n        if (!this.options.scenes[sceneName]) {\n            var errorMsg = \"Scene '\" + sceneName + \"' is not configured\";\n            logger.error(errorMsg);\n            throw new XRSceneNotFoundError(errorMsg);\n        }\n        return this.options.scenes[sceneName];\n    };\n    SumerianProvider.prototype.getSceneController = function (sceneName) {\n        if (!this.options.scenes) {\n            var errorMsg = 'No scenes were defined in the configuration';\n            logger.error(errorMsg);\n            throw new XRNoSceneConfiguredError(errorMsg);\n        }\n        var scene = this.options.scenes[sceneName];\n        if (!scene) {\n            var errorMsg = \"Scene '\" + sceneName + \"' is not configured\";\n            logger.error(errorMsg);\n            throw new XRSceneNotFoundError(errorMsg);\n        }\n        var sceneController = scene.sceneController;\n        if (!sceneController) {\n            var errorMsg = \"Scene controller for '\" + sceneName + \"' has not been loaded\";\n            logger.error(errorMsg);\n            throw new XRSceneNotLoadedError(errorMsg);\n        }\n        return sceneController;\n    };\n    SumerianProvider.prototype.isVRCapable = function (sceneName) {\n        var sceneController = this.getSceneController(sceneName);\n        return sceneController.vrCapable;\n    };\n    SumerianProvider.prototype.isVRPresentationActive = function (sceneName) {\n        var sceneController = this.getSceneController(sceneName);\n        return sceneController.vrPresentationActive;\n    };\n    SumerianProvider.prototype.start = function (sceneName) {\n        var sceneController = this.getSceneController(sceneName);\n        sceneController.start();\n    };\n    SumerianProvider.prototype.enterVR = function (sceneName) {\n        var sceneController = this.getSceneController(sceneName);\n        sceneController.enterVR();\n    };\n    SumerianProvider.prototype.exitVR = function (sceneName) {\n        var sceneController = this.getSceneController(sceneName);\n        sceneController.exitVR();\n    };\n    SumerianProvider.prototype.isMuted = function (sceneName) {\n        var sceneController = this.getSceneController(sceneName);\n        return sceneController.muted;\n    };\n    SumerianProvider.prototype.setMuted = function (sceneName, muted) {\n        var sceneController = this.getSceneController(sceneName);\n        sceneController.muted = muted;\n    };\n    SumerianProvider.prototype.onSceneEvent = function (sceneName, eventName, eventHandler) {\n        var sceneController = this.getSceneController(sceneName);\n        sceneController.on(eventName, eventHandler);\n    };\n    SumerianProvider.prototype.enableAudio = function (sceneName) {\n        var sceneController = this.getSceneController(sceneName);\n        sceneController.enableAudio();\n    };\n    return SumerianProvider;\n}(AbstractXRProvider));\nexport { SumerianProvider };\n//# sourceMappingURL=SumerianProvider.js.map"]},"metadata":{},"sourceType":"module"}